{"version":3,"sources":["assets/logo12.png","assets/ic_pdf.svg","store/actions/auth.jsx","store/types/auth.jsx","store/reducers/auth.jsx","store/reducers/index.jsx","utils/Apis.jsx","store/sagas/auth.jsx","store/sagas/index.jsx","store/configure.jsx","store/index.jsx","components/auth/require_auth.jsx","App/styles.jsx","components/views/Header/styles.jsx","components/views/Header/index.jsx","components/views/Sidebar/styles.jsx","components/views/Sidebar/index.jsx","components/views/GridItem/styles.jsx","components/views/GridItem/index.jsx","components/views/GridContainer/styles.jsx","components/views/GridContainer/index.jsx","components/views/Table/styles.jsx","components/views/Table/index.jsx","components/views/Card/styles.jsx","components/views/Card/index.jsx","components/views/CardHeader/styles.jsx","components/views/CardHeader/index.jsx","components/views/CardBody/styles.jsx","components/views/CardBody/index.jsx","components/pages/Home/Dashboard/ConfirmDialog.jsx","components/pages/Home/Dashboard/index.jsx","components/pages/Home/Dashboard/styles.jsx","components/pages/Home/Users/styles.jsx","components/pages/Home/Users/mail.jsx","components/pages/Home/Users/assign.jsx","components/pages/Home/Users/index.jsx","components/pages/Home/News/styles.jsx","components/pages/Home/News/modal.jsx","components/pages/Home/News/preview.jsx","components/pages/Home/News/index.jsx","components/pages/Home/Faq/styles.jsx","components/pages/Home/Faq/folder_create.js","components/pages/Home/Faq/file_create.js","components/pages/Home/Faq/index.js","components/pages/Home/Exam/styles.jsx","components/pages/Home/Exam/modal_psico.jsx","components/pages/Home/Exam/preview.jsx","components/pages/Home/Exam/psico.jsx","components/pages/Home/Exam/modal_inges.jsx","components/pages/Home/Exam/ingles.jsx","components/pages/Home/Exam/modal.jsx","components/pages/Home/Exam/codigo.jsx","components/pages/Home/Exam/modal_ortograf.jsx","components/pages/Home/Exam/ortograf.jsx","components/pages/Home/Exam/index.jsx","components/pages/Home/Ranking/ConfirmDialog.jsx","components/pages/Home/Ranking/index.jsx","components/pages/Home/Ranking/styles.jsx","components/pages/Home/Survey/index.jsx","components/pages/Home/Survey/styles.jsx","components/pages/Home/Order/styles.jsx","components/pages/Home/Order/details.jsx","components/pages/Home/Order/preview.jsx","components/pages/Home/Order/index.jsx","components/pages/Home/Material/styles.jsx","components/pages/Home/Material/folder_create.js","components/pages/Home/Material/file_create.js","components/pages/Home/Material/index.js","routes/home.jsx","components/pages/Home/index.jsx","components/pages/Home/styles.jsx","components/pages/Register/styles.jsx","components/pages/Register/index.jsx","components/pages/Login/index.jsx","components/pages/Login/styles.jsx","components/pages/NoMatch/index.jsx","components/pages/Register/request.jsx","routes/index.jsx","App/index.jsx","registerServiceWorker.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","createActions","loginRequesting","loginSuccess","loginFailure","logout","handleActions","_handleActions","Object","defineProperty","state","objectSpread","requesting","authenticated","email","message","body","time","Date","error","_ref","payload","localStorage","setItem","JSON","stringify","console","log","token","api_key","name","companies","_ref2","removeItem","session","parse","getItem","undefined","initialState","combineReducers","auth","baseURL","adminHeader","headers","authorization","Apis","_login$register$assig","login","user","axios","post","register","assignUser","readNews","get","publishNews","data","content","deleteNews","getUsers","approve","concat","getFaq","deleteFaqFolder","id","deleteFaq","folder_id","qa_id","createFaqFolder","createFaqFile","getMaterial","flag","createMaterialFolder","type","deleteMaterialFolder","createMaterialFile","deleteMaterial","mat_id","readCodigoExam","deleteCodigo","uploadCodigo","file","form","FormData","append","Content-Type","createNewCodigoQA","readEnglishExam","deleteEnglish","uploadEnglish","loginSaga","response","regenerator_default","a","wrap","_context","prev","next","call","sent","status","put","t0","stop","_marked","this","authSagas","takeLatest","sagas","all","toConsumableArray","sagas_marked","persistConfig","timeout","key","storage","persistedReducer","persistReducer","rootReducer","store","arguments","length","sagaMiddleware","createSagaMiddleware","enhancers","applyMiddleware","createStore","compose","apply","run","rootSaga","configureStore","require_auth","ComposedComponent","Authentication","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","props","context","router","history","push","nextProps","react_default","createElement","Component","contextTypes","PropTypes","object","connect","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","boxShadow","defaultFont","fontFamily","fontWeight","lineHeight","primaryBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","secondaryCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","& small","& a","styles","theme","appBar","backgroundColor","borderBottom","position","width","zIndex","display","flex","fontSize","textTransform","&:hover,&:focus","appResponsive","top","primary","info","success","warning","danger","withStyles","esm_extends","classes","appBarClasses","classNames","AppBar_default","className","Toolbar_default","routes","map","prop","path","location","pathname","navbarName","makeBrand","Hidden_default","mdUp","implementation","IconButton_default","aria-label","onClick","handleDrawerToggle","Menu_default","_objectSpread2","drawerPaper","bottom","left","breakpoints","up","down","right","visibility","overflowY","textAlign","transform","logo","&:after","logoLink","&,&:hover","logoImage","img","verticalAlign","backgroundSize","backgroundPosition","opacity","list","paddingBottom","listStyle","item","&:hover,&:focus,&:visited,&","itemLink","itemIcon","float","itemText","whiteFont","blackFont","&:hover","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","dispatch","bindActionCreators","activeRoute","routeName","indexOf","image","logoText","links","List_default","redirect","listItemClasses","includes","fontClasses","activeClassName","disableFocusRipple","disableRipple","ListItem_default","button","ListItemIcon_default","icon","Icon_default","ListItemText_default","sidebarName","disableTypography","NavLink","to","brand","href","src","alt","Drawer_default","variant","anchor","open","paper","onClose","ModalProps","keepMounted","style","backgroundImage","smDown","grid","children","rest","objectWithoutProperties","Grid_default","assign","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","maxWidth","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableResponsive","spacing","unit","overflowX","tablePaginationRoot","tablePaginationCaption","wrapperContainer","loadingProgress","CustomTable","tableHead","tableData","tableHeaderColor","containerHeight","rowsPerPage","totalCount","page","handleChangePage","isLoading","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","TablePagination_default","root","caption","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","CircularProgress_default","size","defaultProps","card","flexDirection","minWidth","wordWrap","cardPlain","cardProfile","cardChart","& p","_classNames","plain","profile","chart","cardClasses","cardHeader","&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader","&:first-child","&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader","&:not($cardHeaderIcon)","&$cardHeaderStats svg","&$cardHeaderStats i,&$cardHeaderStats .material-icons","&$cardHeaderStats$cardHeaderIcon","cardHeaderPlain","cardHeaderStats","& $cardHeaderIcon","& h1,& h2,& h3,& h4,& h5,& h6","cardHeaderIcon","& i,& .material-icons","& svg","stats","cardHeaderClasses","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","cardBodyClasses","ConfirmDialog","handleClickOpen","_this","setState","handleClose","handleOK","onDelete","index","index_es","tableActionButton","Delete_default","tableActionButtonIcon","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","autoFocus","React","& h2","Dashboard","pageNumber","docs","getDocuments","_callee","respDocs","i","messageProperty","ic_pdf","Typography_default","noWrap","typographyContent","getDate","date","getTime","operationView","_id","url","total","getOwnPropertyDescriptor","enqueueSnackbar","_callee2","_context2","deleteDocument","viewButton","target","downloadButton","download","CloudDownloadOutlined_default","removeButton","Dashboard_ConfirmDialog","event","date_time","moment","local","format","_this$state","views_GridContainer","views_GridItem","xs","sm","md","cardCategoryWhite","&,& a,& a:hover,& a:focus","& a,& a:hover,& a:focus","cardTitleWhite","withSnackbar"," td","textField","operationButton","progress","main_container","flexWrap","formControl","inputlabel","inputbaseRoot","label + &","inputbaseInput","palette","common","white","transitions","create","join","btnNewAccount","wrapper","buttonProgress","typo","alignItem","alignText","SendMail","password","confirm_password","showPassword","showConfirmPassword","handleChange","onCreateNew","sendMail","onAlertMessage","fullWidth","direction","justify","alignItems","FormControl_default","InputLabel_default","shrink","htmlFor","OutlinedInput_default","placeholder","input","onChange","TextField_default","multiline","TextField","Assign","sname","username","snumber","student_number","alert","Users","users","raw_data","closeMail","assign_open","row","result","tmp","val","_this2","columns","options","customBodyRender","tableMeta","updateValue","cursor","class","showMail","views_Card","views_CardHeader","views_CardBody","dist_default","rowsSelected","selectableRows","print","filter","mail","Users_assign","apiKey","help","btnCancel","Modal","rows","Preview","detail","signNow","resp","signFactoringDocument","document","para","req_id","previewFactoringDocument","ref","dangerouslySetInnerHTML","__html","label","align","toLocaleString","News","fetchData","then","catch","e","newPage","handleDelete","answer","handleChangeRowsPerPage","raw","open2","selectedCompanies","stickyHeader","column","borderBlockColor","slice","hover","role","tabIndex","code","onChangeRowsPerPage","modal","preview","nested","InputLabel","action_button","borderWidth","FolderCreateModal","createFolder","onCreate","FileCreateModal","createFile","question","Faq","fetching","openFolderCreate","openFileCreate","handleCreateFolder","handleDeleteFolder","selected","handleCreateFile","handleDeleteFile","file_selected","onCloseFolderCreate","onCloseFileCreate","files","CreateNewFolder_default","Edit_default","Folder_default","folder_name","folderItem","AddBox_default","Fragment","Subject_default","Collapse_default","in","unmountOnExit","whiteSpace","fileItem","folder_create","file_create","firebase","apps","initializeApp","authDomain","storageBucket","avatar","isUploading","pubURL","handleUploadStart","handleProgress","handleUploadError","handleUploadSuccess","filename","child","getDownloadURL","abrupt","createNewPsicoQA","lib_default","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","LinearProgress_default","disabled","signRealFactoringDocument","previewRealFactoringDocument","Psico","readPsicoExam","deletePsico","uploadOrtograf","Correct","modal_psico","Exam_preview","EngModal","Description","Question","Answer1","Answer2","Answer3","Answer4","Ingles","deleteEgnlish","refs","click","modal_inges","Codigo","Exam_modal","createNewOrtografQA","Description1","Incorrect","Description2","Ortograf","readOrtografExam","deleteOrtograf","modal_ortograf","Exam","_this$state2","Tabs_default","indicatorColor","textColor","scrollButtons","Tab_default","codigo","ingles","ortograf","psico","handleOk","_this$props","Invoices","cdata","prevCompanies","companyArray","t","getInvoices","makeCompanyArray","makeCompanyTableData","x","toString","replace","b","sort","numberWithSpaces","_this3","compOptions","filterType","fixedHeader","textLabels","selectedRows","text","delete","onRowsSelect","currentRowsSelected","allRowsSelected","splice","invoiceTab","companyTab","UserProfile","new_password","showNewPassword","business","handleChangePassword","handleChangeConfirmPassword","handleClickShowPassword","handleClickShowNewPassword","handleClickShowConfirmPassword","onUpdate","changePassword","old_password","res","err","linkAccount","defaultValue","endAdornment","InputAdornment_default","Visibility_default","VisibilityOff_default","btnUpdate","Detail","numPages","invoice","attachment","pdfview","onDocumentComplete","pages","onSendRequest","signDebtDocument","onDocumentLoadSuccess","onSend","_ref3","getAnInvoice","invoice_id","access_token","is_manual","Invoice","registered","DocumentNumber","AccountingMethod","Address1","Currency","previewDebtDocument","Debts","handleDetail","rowIndex","handlePreview","getDebtRequests","debtTab","details","Order_preview","config","Material","audioTab","Material_folder_create","Material_file_create","homeRoutes","Cloud","SupervisorAccount","Person","Survey","ExitToApp","switchRoutes","Switch","Redirect","from","Route","Home","mobileOpen","resizeFunction","bind","assertThisInitialized","window","innerWidth","addEventListener","mainPanel","scrollTop","removeEventListener","views_Sidebar","views_Header","getRoute","maxHeight","Register","Login","open_register","onSignIn","createNew","onCloseRegiser","handleCloseNotification","reason","openNotification","login_container","Card_default","main_subcontainer","btnForgetPasssword","btnSignIn","containerSignIn","lblNewAccount","pages_Register","alignContent","logo_container","btnFocusColor","paddingHorizontal","NoMatch","Request","loading","stage","verifyAdmin","search","Paper_default","elevation","createBrowserHistory","Routes","BrowserRouter","hisotry","exact","render","RequireAuth","createMuiTheme","main","light","dark","secondary","stylesSnackbar","WrappedRoutes","build","maxSnack","anchorOrigin","vertical","horizontal","variantSuccess","variantError","variantWarning","variantInfo","src_routes","App","MuiThemeProvider_default","es","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Array","prototype","equals","warn","enumerable","ReactDOM","src_App","getElementById","URL","process","origin","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1308c595.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo12.2c4e7cfa.png\";","module.exports = __webpack_public_path__ + \"static/media/ic_pdf.d6b6f3d0.svg\";","import { createActions } from 'redux-actions';\r\nimport {\r\n    LOGIN_REQUESTING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT\r\n} from '../types/auth';\r\n  \r\nexport const {\r\n    loginRequesting,\r\n    loginSuccess,\r\n    loginFailure,\r\n    logout\r\n} = createActions(\r\n    LOGIN_REQUESTING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT\r\n);","// auth action types\r\n// export const CHECK = 'AUTH_CHECK';\r\n// export const LOGIN = 'AUTH_LOGIN';\r\n// export const LOGOUT = 'AUTH_LOGOUT';\r\n// export const RESET_PASSWORD = 'AUTH_RESET_PASSWORD';\r\n// export const USER = 'AUTH_USER';\r\n\r\nexport const LOGIN_REQUESTING = 'LOGIN_REQUESTING'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport default {\r\n  LOGIN_REQUESTING,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT,\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport { \r\n    loginRequesting,\r\n    loginSuccess,\r\n    loginFailure,\r\n    logout\r\n} from '../actions/auth';\r\n\r\n  \r\nconst initialState = () => {\r\n    const session = JSON.parse(localStorage.getItem('session'))\r\n    return ({\r\n        requesting: false,\r\n        authenticated: session !== undefined && session != null ? 1 : 0, //0: init, 1: login_success, -1: login failed \r\n        email: session?session.email:'',\r\n        api_key:session?session.api_key:'',\r\n        token: session?session.token:'',\r\n        companies: session?session.companies:[],\r\n        message: {},\r\n        error: {},\r\n    })\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [loginRequesting]: (state) => {\r\n            return {\r\n                ...state,\r\n                requesting: true,\r\n                authenticated: 0,\r\n                email: '',\r\n                message: { body: 'Logging in...', time: new Date() },\r\n                error: {},\r\n            }\r\n        },\r\n\r\n        [loginSuccess]: (state, {payload}) => {\r\n            localStorage.setItem('session', JSON.stringify(payload));\r\n            console.log(\"session\", payload);\r\n            return {\r\n                ...state,\r\n                requesting: false,\r\n                authenticated: 1,\r\n                email: payload.email,\r\n                token: payload.token,\r\n                api_key:payload.api_key,\r\n                name:payload.name,\r\n                companies:payload.companies,\r\n                message: {},\r\n                error: {},\r\n            }\r\n        },\r\n\r\n        [loginFailure]: (state, {payload}) => {\r\n            console.log(\"loginFailure -------\", payload);\r\n            return {\r\n                ...state,\r\n                requesting: false,\r\n                authenticated: -1,\r\n                message: {},\r\n                error: {\r\n                    body: \"Log in failed\",\r\n                    time: new Date(),\r\n                },\r\n            }\r\n        },\r\n\r\n        [logout]: (state) => {\r\n            localStorage.removeItem('session');\r\n  \r\n            return {\r\n                ...state, authenticated: 0, token:'', email:'', api_key:''\r\n            }\r\n        },\r\n        \r\n        // [resetPassword]: (state, {payload}) => {\r\n        //     return {\r\n        //         ...state, resetPassword: true,\r\n        //    }\r\n        // },\r\n    },\r\n    initialState()\r\n);","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  auth,   \r\n});\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"http://51.91.11.13:4000/api/v1/admin\";\r\nconst adminHeader = {\r\n    headers: {\r\n        \"authorization\": 'admin'\r\n    }\r\n}\r\n// const baseURL = \"http://localhost:4000/api/v1/admin\";\r\nexport default {\r\n    // Saves a book to the database\r\n    login: function (user) {\r\n        return axios.post(baseURL + \"/login\", user, { headers: { \"authorization\": \"admin\" } });\r\n    },\r\n\r\n    register: function (user) {\r\n        return axios.post(baseURL + \"/signup\", user);\r\n    },\r\n\r\n    assignUser: function (user) {\r\n        return axios.post(baseURL + \"/assign_user\", user, { headers: { \"authorization\": \"admin\" } });\r\n    },\r\n\r\n    readNews: function () {\r\n        return axios.get(baseURL + \"/read_news\", { headers: { \"authorization\": \"admin\" } });\r\n    },\r\n\r\n    publishNews: function (data) {\r\n        return axios.post(baseURL + \"/publish_news\", { content: data }, { headers: { \"authorization\": \"admin\" } });\r\n    },\r\n\r\n    deleteNews: function (data) {\r\n        return axios.get(baseURL + \"/delete_news?id=\" + data, { headers: { \"authorization\": \"admin\" } });\r\n    },\r\n\r\n    getUsers: function (token) {\r\n        return axios.get(baseURL + \"/users\", {\r\n            headers: {\r\n                \"authorization\": token\r\n            }\r\n        });\r\n    },\r\n\r\n    approve: function (data) {\r\n        return axios.get(baseURL + `/users/approve?email=${data.email}&state=${data.state}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    /////////////////////////////////////// === FAQ === //////////////////////////////////////////////\r\n    getFaq: function () {\r\n        return axios.get(baseURL + `/get_faqs`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    deleteFaqFolder: function (id) {\r\n        return axios.get(baseURL + `/delete_faq_folder?id=${id}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    deleteFaq: function (folder_id, qa_id) {\r\n        return axios.get(baseURL + `/delete_faq?folder_id=${folder_id}&qa_id=${qa_id}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    createFaqFolder: function (name) {\r\n        return axios.get(baseURL + `/create_faq_folder?name=${name}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    createFaqFile: function (data) {\r\n        return axios.post(baseURL + `/create_faq`, data, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n\r\n\r\n    getMaterial: function (flag) {\r\n        return axios.get(baseURL + `/get_materials?type=${flag}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n\r\n    createMaterialFolder: function (name, type) {\r\n        return axios.get(baseURL + `/create_material_folder?name=${name}&type=${type}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n\r\n    deleteMaterialFolder: function (id) {\r\n        return axios.get(baseURL + `/delete_material_folder?id=${id}`, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n    createMaterialFile: function (data) {\r\n        return axios.post(baseURL + `/create_material`, data, {\r\n            headers: {\r\n                \"authorization\": 'admin'\r\n            }\r\n        });\r\n    },\r\n\r\n    deleteMaterial: function (folder_id, mat_id) {\r\n        return axios.get(baseURL + `/delete_material?folder_id=${folder_id}&mat_id=${mat_id}`, adminHeader);\r\n    },\r\n\r\n\r\n    /////////////////////////============= Material ends ============////////////////////////////////////////////\r\n\r\n    ////////////////////////==============Codigi Exam================///////////////////////////////////////////\r\n    readCodigoExam: function () {\r\n        return axios.get(baseURL + `/read_codigo_exam`, adminHeader);\r\n    },\r\n\r\n    deleteCodigo: function (id) {\r\n        return axios.get(baseURL + `/delete_codigo_exam?id=${id}`, adminHeader);\r\n    },\r\n    uploadCodigo: function (file) {\r\n        let form = new FormData()\r\n        form.append('file', file, 'tmp.csv')\r\n        return axios.post(baseURL + '/upload_codigo_exam', form, { headers: { 'Content-Type': 'multipart/form-data', 'authorization': \"admin\" } })\r\n    },\r\n    createNewCodigoQA: function (data) {\r\n        return axios.post(baseURL + '/create_codigo_exam', data, adminHeader)\r\n    },\r\n    //////////////////////////////////English ///////////////////////////////////////////////////\r\n    readEnglishExam: function () {\r\n        return axios.get(baseURL + `/read_english_exam`, adminHeader);\r\n    },\r\n\r\n    deleteEnglish: function (id) {\r\n        return axios.get(baseURL + `/delete_english_exam?id=${id}`, adminHeader);\r\n    },\r\n    uploadEnglish: function (file) {\r\n        let form = new FormData()\r\n        form.append('file', file, 'tmp.csv')\r\n        return axios.post(baseURL + '/upload_english_exam', form, { headers: { 'Content-Type': 'multipart/form-data', 'authorization': \"admin\" } })\r\n    },\r\n    createNewCodigoQA: function (data) {\r\n        return axios.post(baseURL + '/create_english_exam', data, adminHeader)\r\n    },\r\n    /////////////////////////////////////Ortograf//////////////////////////////////////////////\r\n    readOrtografExam: function () {\r\n        return axios.get(baseURL + `/read_ortograf_exam`, adminHeader);\r\n    },\r\n\r\n    deleteOrtograf: function (id) {\r\n        return axios.get(baseURL + `/delete_ortograf_exam?id=${id}`, adminHeader);\r\n    },\r\n\r\n    uploadOrtograf: function (file) {\r\n        let form = new FormData()\r\n        form.append('file', file, 'tmp.csv')\r\n        return axios.post(baseURL + '/upload_ortograf_exam', form, { headers: { 'Content-Type': 'multipart/form-data', 'authorization': \"admin\" } })\r\n    },\r\n\r\n    createNewOrtografQA: function (data) {\r\n        return axios.post(baseURL + '/create_ortograf_exam', data, adminHeader)\r\n    },\r\n\r\n    ////////////////////////////////////////////Psico////////////////////////////////////\r\n    readPsicoExam: function () {\r\n        return axios.get(baseURL + `/read_psico_exam`, adminHeader);\r\n    },\r\n\r\n    deletePsico: function (id) {\r\n        return axios.get(baseURL + `/delete_psico_exam?id=${id}`, adminHeader);\r\n    },\r\n    \r\n    createNewPsicoQA: function (data) {\r\n        return axios.post(baseURL + '/create_psico_exam', data, adminHeader)\r\n    },\r\n};\r\n","import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport Apis from '../../utils/Apis'\r\nimport {\r\n    LOGIN_REQUESTING,\r\n} from '../types/auth';\r\nimport {\r\n    loginSuccess,\r\n    loginFailure,\r\n} from '../actions/auth'\r\n\r\nexport function * loginSaga({payload}) {\r\n    try {\r\n        const response = yield call(Apis.login, payload);\r\n        console.log(\"loginSaga response\", response);\r\n        if(response.status === 200) {\r\n            yield put(loginSuccess(response.data));\r\n        }\r\n    } catch(e) {\r\n        yield put(loginFailure(e.response.data));\r\n    }\r\n}\r\n\r\nexport const authSagas = [\r\n    takeLatest(LOGIN_REQUESTING, loginSaga)\r\n];","//https://medium.com/@js_tut/the-saga-continues-magic-in-react-44da8d134285\r\n//https://github.com/sotojuan/saga-login-flow/blob/master/app/sagas/index.js\r\n\r\nimport { all } from 'redux-saga/effects';\r\nimport { authSagas  } from './auth';\r\n\r\nexport default function *sagas() {\r\n\r\n    yield all([\r\n        ...authSagas,\r\n    ]);\r\n    \r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' \r\n\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst persistConfig = {\r\n    timeout: 10000,\r\n    key: 'root',\r\n    storage,\r\n}\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport default function (initialState = {}) {\r\n    // Middleware and Store enhancers\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const enhancers = [\r\n        applyMiddleware(sagaMiddleware),\r\n    ];\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        enhancers.push(applyMiddleware(createLogger()));\r\n        window.devToolsExtension && enhancers.push(window.devToolsExtension());\r\n    }\r\n\r\n    const store = createStore(persistedReducer, initialState, compose(...enhancers));\r\n    /* ------------- Saga Middleware ------------- */\r\n    sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n}\r\n","import configureStore from './configure';\r\n// import { persistStore } from 'redux-persist'\r\n\r\nexport const store = configureStore();\r\n// export const persistor = persistStore(store);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function(ComposedComponent) {\r\n    class Authentication extends Component {\r\n\r\n        componentWillMount() {\r\n            if (!this.props.authenticated) {\r\n                this.context.router.history.push('/login');\r\n            }\r\n        }\r\n\r\n        componentWillUpdate(nextProps) {\r\n            if (!nextProps.authenticated) {\r\n                this.context.router.history.push('/login');\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return <ComposedComponent {...this.props} />\r\n        }\r\n    }\r\n\r\n    function mapStateToProps({auth}) {\r\n        return { authenticated: auth.authenticated };\r\n    }\r\n\r\n    Authentication.contextTypes = {\r\n        router: PropTypes.object\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authentication);\r\n}","// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\"\r\n};\r\n\r\nconst boxShadow = {\r\n    boxShadow:\r\n        \"0 10px 30px -12px rgba(0, 0, 0, 0.42), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\r\n};\r\n\r\nconst card = {\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    margin: \"25px 0\",\r\n    boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\r\n    borderRadius: \"3px\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    background: \"#fff\"\r\n};\r\n\r\nconst defaultFont = {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"300\",\r\n    lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = \"#0d9644\";\r\nconst primaryLightColor = \"#3dab69\";\r\nconst primaryDarkColor = \"#09692f\";\r\nconst secondaryColor = \"#f44336\";\r\nconst secondaryLightColor = \"#ff7961\";\r\nconst secondaryDarkColor = \"#ba000d\";\r\n\r\nconst blackColor = \"#000\";\r\nconst warningColor = \"#ff9800\";\r\nconst dangerColor = \"#f44336\";\r\nconst successColor = \"#4caf50\";\r\nconst infoColor = \"#00acc1\";\r\nconst roseColor = \"#e91e63\";\r\nconst grayColor = \"#999999\";\r\n\r\nconst primaryBoxShadow = {\r\n    boxShadow:\r\n        \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\"\r\n};\r\nconst infoBoxShadow = {\r\n    boxShadow:\r\n        \"0 12px 20px -10px rgba(0, 188, 212, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(0, 188, 212, 0.2)\"\r\n};\r\nconst successBoxShadow = {\r\n    boxShadow:\r\n        \"0 12px 20px -10px rgba(76, 175, 80, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(76, 175, 80, 0.2)\"\r\n};\r\nconst warningBoxShadow = {\r\n    boxShadow:\r\n        \"0 12px 20px -10px rgba(255, 152, 0, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(255, 152, 0, 0.2)\"\r\n};\r\nconst dangerBoxShadow = {\r\n    boxShadow:\r\n        \"0 12px 20px -10px rgba(244, 67, 54, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(244, 67, 54, 0.2)\"\r\n};\r\nconst roseBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(233, 30, 99, 0.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n    background: \"linear-gradient(60deg, #ffa726, #fb8c00)\",\r\n    ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n    background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\r\n    ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n    background: \"linear-gradient(60deg, #ef5350, #e53935)\",\r\n    ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n    background: \"linear-gradient(60deg, #26c6da, #00acc1)\",\r\n    ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n    background: \"linear-gradient(60deg, #ab47bc, #8e24aa)\",\r\n    ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n    background: \"linear-gradient(60deg, #ec407a, #d81b60)\",\r\n    ...roseBoxShadow\r\n};\r\n\r\nconst secondaryCardHeader = {\r\n    background: \"linear-gradient(60deg, #f44336, #e41f11)\",\r\n    ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n    margin: \"0 20px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderTop: \"1px solid #eeeeee\",\r\n    height: \"auto\",\r\n    ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n    margin: \"-20px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"15px\"\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n        \"0 10px 20px -12px rgba(0, 0, 0, 0.42), 0 3px 20px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n    color: \"#3C4858\",\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n        color: \"#777\",\r\n        fontWeight: \"400\",\r\n        lineHeight: \"1\"\r\n    }\r\n};\r\n\r\nconst cardTitle = {\r\n    ...title,\r\n    marginTop: \"0\",\r\n    marginBottom: \"3px\",\r\n    minHeight: \"auto\",\r\n    \"& a\": {\r\n        ...title,\r\n        marginTop: \".625rem\",\r\n        marginBottom: \"0.75rem\",\r\n        minHeight: \"auto\"\r\n    }\r\n};\r\n\r\nconst cardSubtitle = {\r\n    marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n    \"& + $cardLink\": {\r\n        marginLeft: \"1.25rem\"\r\n    }\r\n};\r\n\r\nexport {\r\n    //variables\r\n    drawerWidth,\r\n    transition,\r\n    container,\r\n    boxShadow,\r\n    card,\r\n    defaultFont,\r\n    primaryColor,\r\n    primaryLightColor,\r\n    primaryDarkColor,\r\n    secondaryColor,\r\n    secondaryLightColor,\r\n    secondaryDarkColor,\r\n    blackColor,\r\n    warningColor,\r\n    dangerColor,\r\n    successColor,\r\n    infoColor,\r\n    roseColor,\r\n    grayColor,\r\n    primaryBoxShadow,\r\n    infoBoxShadow,\r\n    successBoxShadow,\r\n    warningBoxShadow,\r\n    dangerBoxShadow,\r\n    roseBoxShadow,\r\n    warningCardHeader,\r\n    successCardHeader,\r\n    dangerCardHeader,\r\n    infoCardHeader,\r\n    primaryCardHeader,\r\n    roseCardHeader,\r\n    secondaryCardHeader,\r\n    cardActions,\r\n    cardHeader,\r\n    defaultBoxShadow,\r\n    title,\r\n    cardTitle,\r\n    cardSubtitle,\r\n    cardLink\r\n};","import {\r\n    container,\r\n    defaultFont,\r\n    primaryColor,\r\n    defaultBoxShadow,\r\n    infoColor,\r\n    successColor,\r\n    warningColor,\r\n    dangerColor\r\n} from \"../../../App/styles\";\r\n  \r\nconst styles = theme => ({\r\n    appBar: {\r\n        backgroundColor: \"transparent\",\r\n        boxShadow: \"none\",\r\n        borderBottom: \"0\",\r\n        marginBottom: \"0\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        paddingTop: \"10px\",\r\n        zIndex: \"1029\",\r\n        color: \"#555555\",\r\n        border: \"0\",\r\n        borderRadius: \"3px\",\r\n        padding: \"10px 0\",\r\n        transition: \"all 150ms ease 0s\",\r\n        minHeight: \"50px\",\r\n        display: \"block\"\r\n    },\r\n    container: {\r\n        ...container,\r\n        minHeight: \"50px\"\r\n    },\r\n    flex: {\r\n        ...defaultFont,\r\n        fontSize: \"18px\",\r\n        flex: 1\r\n    },\r\n    title: {\r\n        ...defaultFont,\r\n        lineHeight: \"30px\",\r\n        fontSize: \"18px\",\r\n        borderRadius: \"3px\",\r\n        textTransform: \"none\",\r\n        color: \"inherit\",\r\n        margin: \"0\",\r\n        \"&:hover,&:focus\": {\r\n            background: \"transparent\"\r\n        }\r\n    },\r\n    appResponsive: {\r\n        top: \"8px\"\r\n    },\r\n    primary: {\r\n        backgroundColor: primaryColor,\r\n        color: \"#FFFFFF\",\r\n        ...defaultBoxShadow\r\n    },\r\n    info: {\r\n        backgroundColor: infoColor,\r\n        color: \"#FFFFFF\",\r\n        ...defaultBoxShadow\r\n    },\r\n    success: {\r\n        backgroundColor: successColor,\r\n        color: \"#FFFFFF\",\r\n        ...defaultBoxShadow\r\n    },\r\n    warning: {\r\n        backgroundColor: warningColor,\r\n        color: \"#FFFFFF\",\r\n        ...defaultBoxShadow\r\n    },\r\n    danger: {\r\n        backgroundColor: dangerColor,\r\n        color: \"#FFFFFF\",\r\n        ...defaultBoxShadow\r\n    }\r\n});\r\n  \r\nexport default styles;","import React from \"react\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n\r\n// core components\r\n// import Button from \"components/CustomButtons/Button.jsx\";\r\n\r\nimport styles from './styles';\r\n\r\nfunction Header({ ...props }) {\r\n    function makeBrand() {\r\n        var name;\r\n        props.routes.map((prop, key) => {\r\n            if (prop.path === props.location.pathname) {\r\n                name = prop.navbarName;\r\n            }\r\n            return null;\r\n        });\r\n        return name;\r\n    }\r\n    const { classes, color } = props;\r\n    const appBarClasses = classNames({\r\n        [\" \" + classes[color]]: color\r\n    });\r\n\r\n    return (\r\n        <AppBar className={classes.appBar + appBarClasses}>\r\n            <Toolbar className={classes.container}>\r\n                <div className={classes.flex}>\r\n                    {/* Here we create navbar brand, based on route name */}\r\n                    {/* <Button color=\"transparent\" href=\"#\" className={classes.title}> */}\r\n                        {makeBrand()}\r\n                    {/* </Button> */}\r\n                </div>\r\n                <Hidden mdUp implementation=\"css\">\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={props.handleDrawerToggle}\r\n                        >\r\n                        <Menu />\r\n                    </IconButton>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"])\r\n};\r\n  \r\nexport default withStyles(styles)(Header);","import {\r\n    drawerWidth,\r\n    transition,\r\n    boxShadow,\r\n    defaultFont,\r\n    primaryColor,\r\n    primaryBoxShadow,\r\n    infoColor,\r\n    successColor,\r\n    warningColor,\r\n    dangerColor\r\n} from \"../../../App/styles\";\r\n    \r\nconst styles = theme => ({\r\n    drawerPaper: {\r\n        border: \"none\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        left: \"0\",\r\n        zIndex: \"1\",\r\n        ...boxShadow,\r\n        width: drawerWidth,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: drawerWidth,\r\n            position: \"fixed\",\r\n            height: \"100%\"\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: drawerWidth,\r\n            ...boxShadow,\r\n            position: \"fixed\",\r\n            display: \"block\",\r\n            top: \"0\",\r\n            height: \"100vh\",\r\n            right: \"0\",\r\n            left: \"auto\",\r\n            zIndex: \"1032\",\r\n            visibility: \"visible\",\r\n            overflowY: \"visible\",\r\n            borderTop: \"none\",\r\n            textAlign: \"left\",\r\n            paddingRight: \"0px\",\r\n            paddingLeft: \"0\",\r\n            transform: `translate3d(${drawerWidth}px, 0, 0)`,\r\n            ...transition\r\n        }\r\n    },\r\n    logo: {\r\n        position: \"relative\",\r\n        padding: \"15px 15px\",\r\n        zIndex: \"4\",\r\n        \"&:after\": {\r\n            content: '\"\"',\r\n            position: \"absolute\",\r\n            bottom: \"0\",\r\n    \r\n            height: \"1px\",\r\n            right: \"15px\",\r\n            width: \"calc(100% - 30px)\",\r\n            backgroundColor: \"rgba(180, 180, 180, 0.3)\"\r\n        }\r\n    },\r\n    logoLink: {\r\n        ...defaultFont,\r\n        textTransform: \"uppercase\",\r\n        padding: \"5px 0\",\r\n        display: \"block\",\r\n        fontSize: \"18px\",\r\n        textAlign: \"left\",\r\n        fontWeight: \"400\",\r\n        lineHeight: \"30px\",\r\n        textDecoration: \"none\",\r\n        backgroundColor: \"transparent\",\r\n        color: \"#f36a26\",\r\n        \"&,&:hover\": {\r\n            color: \"#f36a26\",\r\n            textDecoration: \"none\",\r\n        }\r\n    },\r\n    logoImage: {\r\n        width: \"90%\",\r\n        display: \"inline-block\",\r\n        \r\n        marginRight: \"15px\"\r\n    },\r\n    img: {\r\n        width: \"245px\",\r\n        top: \"15px\",\r\n       \r\n        verticalAlign: \"middle\",\r\n        border: \"0\"\r\n    },\r\n    background: {\r\n        position: \"absolute\",\r\n        zIndex: \"1\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"block\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n        \"&:after\": {\r\n            position: \"absolute\",\r\n            zIndex: \"3\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            content: '\"\"',\r\n            display: \"block\",\r\n            background: \"#000\",\r\n            opacity: \".8\"\r\n        }\r\n    },\r\n    list: {\r\n        marginTop: \"20px\",\r\n        paddingLeft: \"0\",\r\n        paddingTop: \"0\",\r\n        paddingBottom: \"0\",\r\n        marginBottom: \"0\",\r\n        listStyle: \"none\",\r\n        position: \"unset\"\r\n    },\r\n    item: {\r\n        position: \"relative\",\r\n        display: \"block\",\r\n        textDecoration: \"none\",\r\n        \"&:hover,&:focus,&:visited,&\": {\r\n            color: \"#FFFFFF\",\r\n            textDecoration: \"none\"\r\n        }\r\n    },\r\n    itemLink: {\r\n        width: \"auto\",\r\n        transition: \"all 300ms linear\",\r\n        margin: \"10px 15px 0\",\r\n        borderRadius: \"3px\",\r\n        position: \"relative\",\r\n        display: \"block\",\r\n        padding: \"10px 15px\",\r\n        backgroundColor: \"transparent\",\r\n        ...defaultFont\r\n    },\r\n    itemIcon: {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        float: \"left\",\r\n        marginRight: \"15px\",\r\n        paddingTop:\"3px\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        color: \"rgba(255, 255, 255, 0.8)\"\r\n    },\r\n    itemText: {\r\n        ...defaultFont,\r\n        margin: \"0\",\r\n        lineHeight: \"30px\",\r\n        fontSize: \"14px\",\r\n        color: \"#FFFFFF\"\r\n    },\r\n    whiteFont: {\r\n        color: \"#FFF\"\r\n    },\r\n    blackFont: {\r\n        color: \"#000\"\r\n    },\r\n    primary: {\r\n        backgroundColor: primaryColor,\r\n        boxShadow:\r\n            \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\",\r\n        \"&:hover\": {\r\n            backgroundColor: primaryColor,\r\n            boxShadow:\r\n            \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\"\r\n        }\r\n    },\r\n    purple: {\r\n        backgroundColor: primaryColor,\r\n        ...primaryBoxShadow,\r\n        \"&:hover\": {\r\n            backgroundColor: primaryColor,\r\n            ...primaryBoxShadow\r\n        }\r\n    },\r\n    blue: {\r\n        backgroundColor: infoColor,\r\n        boxShadow:\r\n            \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\",\r\n        \"&:hover\": {\r\n            backgroundColor: infoColor,\r\n            boxShadow:\r\n            \"0 12px 20px -10px rgba(0,188,212,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(0,188,212,.2)\"\r\n        }\r\n    },\r\n    green: {\r\n        backgroundColor: successColor,\r\n        boxShadow:\r\n            \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\",\r\n        \"&:hover\": {\r\n            backgroundColor: successColor,\r\n            boxShadow:\r\n            \"0 12px 20px -10px rgba(76,175,80,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(76,175,80,.2)\"\r\n        }\r\n    },\r\n    orange: {\r\n        backgroundColor: warningColor,\r\n        boxShadow:\r\n            \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\",\r\n        \"&:hover\": {\r\n            backgroundColor: warningColor,\r\n            boxShadow:\r\n            \"0 12px 20px -10px rgba(255,152,0,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(255,152,0,.2)\"\r\n        }\r\n    },\r\n    red: {\r\n        backgroundColor: dangerColor,\r\n        boxShadow:\r\n            \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\",\r\n        \"&:hover\": {\r\n            backgroundColor: dangerColor,\r\n            boxShadow:\r\n            \"0 12px 20px -10px rgba(244,67,54,.28), 0 4px 20px 0 rgba(0,0,0,.12), 0 7px 8px -5px rgba(244,67,54,.2)\"\r\n        }\r\n    },\r\n    sidebarWrapper: {\r\n        position: \"relative\",\r\n        height: \"calc(100vh - 75px)\",\r\n        overflow: \"auto\",\r\n        width: \"260px\",\r\n        zIndex: \"4\",\r\n        overflowScrolling: \"touch\"\r\n    },\r\n    activePro: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            bottom: \"13px\"\r\n        }\r\n    }\r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nimport styles from './styles';\r\nimport {logout} from \"../../../store/actions/auth\";\r\n\r\nimport Collapse from '@material-ui/core/Collapse';\r\nconst Sidebar = ({ ...props }) => {\r\n    // verifies if routeName is the one active (in browser input)\r\n    function activeRoute(routeName) {\r\n        return props.location.pathname.indexOf(routeName) > -1 ? true : false;\r\n    }\r\n\r\n    // function handleClick()\r\n    // {\r\n\r\n    //     this.setState({\r\n    //         opend:newstate\r\n    //     })\r\n    // }\r\n\r\n    const logout = () => {\r\n        props.logout();\r\n    }\r\n\r\n    const { classes, color, logo, image, logoText, routes } = props;\r\n\r\n    var links = (\r\n        <List className={classes.list}>\r\n            \r\n            {routes.map((prop, key) => {\r\n                if (prop.redirect) return null;\r\n                var activePro = \" \";\r\n                var listItemClasses;\r\n                if (prop.path.includes(\"/logout\")) {\r\n                    activePro = classes.activePro + \" \";\r\n                    listItemClasses = classNames({\r\n                        [\" \" + classes[color]]: true\r\n                    });\r\n                } else {\r\n                    listItemClasses = classNames({\r\n                        [\" \" + classes[color]]: activeRoute(prop.path)\r\n                    });\r\n                }\r\n                let fontClasses = classNames({\r\n                    [\" \" + classes.whiteFont]: true\r\n                });\r\n                if (!activeRoute(prop.path) && !prop.path.includes(\"/logout\")) {\r\n                    fontClasses = classNames({\r\n                        [\" \" + classes.blackFont]: true\r\n                    });\r\n                }\r\n                // const whiteFontClasses = classes.whiteFont;classNames({\r\n                //     [\" \" + classes.whiteFont]: activeRoute(prop.path)\r\n                // });\r\n                \r\n                if (!prop.path.includes(\"/logout\")) {\r\n                    return (\r\n                        <NavLink\r\n                            to={prop.path}\r\n                            className={activePro + classes.item}\r\n                            activeClassName=\"active\"\r\n                            key={key}>\r\n                            <ListItem button className={classes.itemLink + listItemClasses}>\r\n                                <ListItemIcon className={classes.itemIcon + fontClasses} >\r\n                                    {typeof prop.icon === \"string\" ? (\r\n                                        <Icon>{prop.icon}</Icon>\r\n                                    ) : (\r\n                                        <prop.icon />\r\n                                    )}\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={prop.sidebarName}\r\n                                    className={classes.itemText + fontClasses}\r\n                                    disableTypography={true}\r\n                                />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    );\r\n                }\r\n                return (\r\n                    <div\r\n                        className={activePro + classes.item}\r\n                        activeClassName=\"active\"\r\n                        disableFocusRipple\r\n                        disableRipple\r\n                        key={key}>\r\n                        <ListItem button className={classes.itemLink + listItemClasses} onClick={logout}>\r\n                            <ListItemIcon className={classes.itemIcon + fontClasses} >\r\n                                {typeof prop.icon === \"string\" ? (\r\n                                    <Icon>{prop.icon}</Icon>\r\n                                ) : (\r\n                                    <prop.icon />\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                primary={prop.sidebarName}\r\n                                className={classes.itemText + fontClasses}\r\n                                disableTypography={true}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                );\r\n            })}\r\n            \r\n        </List>\r\n    );\r\n\r\n    var brand = (\r\n        <div className={classes.logo}>\r\n            <a href=\"/\" className={classes.logoLink}>\r\n                <div className={classes.logoImage}>\r\n                    <img src={logo} alt=\"logo\" className={classes.img} />\r\n                </div>\r\n                {logoText}\r\n            </a>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Hidden mdUp implementation=\"css\">\r\n                <Drawer\r\n                    variant=\"temporary\"\r\n                    anchor=\"right\"\r\n                    open={props.open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper\r\n                    }}\r\n                    onClose={props.handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true // Better open performance on mobile.\r\n                    }}>\r\n                    {brand}\r\n                    <div className={classes.sidebarWrapper}>\r\n                        {/* <HeaderLinks /> */}\r\n                        {links}\r\n                    </div>\r\n                    {\r\n                    image !== undefined ? \r\n                        (<div\r\n                            className={classes.background}\r\n                            style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n                        />) \r\n                    :\r\n                        null\r\n                    }\r\n                </Drawer>\r\n            </Hidden>\r\n            <Hidden smDown implementation=\"css\">\r\n                <Drawer\r\n                    anchor=\"left\"\r\n                    variant=\"permanent\"\r\n                    open\r\n                    classes={{\r\n                        paper: classes.drawerPaper\r\n                    }}>\r\n                    {brand}\r\n                    <div className={classes.sidebarWrapper}>{links}</div>\r\n                    {\r\n                        image !== undefined ? \r\n                            (<div\r\n                                className={classes.background}\r\n                                style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n                            />) \r\n                        :\r\n                            null}\r\n                </Drawer>\r\n            </Hidden>\r\n        </div>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout : bindActionCreators(logout, dispatch),\r\n})\r\n  \r\n// export default withStyles(styles)(Sidebar);\r\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(Sidebar));","const styles = theme => ({\r\n    grid: {\r\n        padding: \"0 15px !important\"\r\n    }\r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport styles from './styles';\r\n\r\nfunction GridItem({ ...props }) {\r\n    const { classes, children, ...rest } = props;\r\n    return (\r\n        <Grid item {...rest} className={classes.grid}>\r\n            {children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nGridItem.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(GridItem);","const styles = theme => ({\r\n    grid: {\r\n        margin: \"0 -15px !important\",\r\n        width: \"unset\"\r\n    }\r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport styles from './styles';\r\n\r\nfunction GridContainer(props) {\r\n    const { classes, children, ...rest } = props;\r\n    return (\r\n        <Grid container {...rest} className={classes.grid}>\r\n            {children}\r\n        </Grid>\r\n    );\r\n}\r\n  \r\nGridContainer.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(GridContainer);","import {\r\n    warningColor,\r\n    primaryColor,\r\n    dangerColor,\r\n    successColor,\r\n    infoColor,\r\n    roseColor,\r\n    grayColor,\r\n    defaultFont\r\n} from \"../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst styles = theme => ({\r\n    warningTableHeader: {\r\n        color: warningColor\r\n    },\r\n    primaryTableHeader: {\r\n        color: primaryColor\r\n    },\r\n    dangerTableHeader: {\r\n        color: dangerColor\r\n    },\r\n    successTableHeader: {\r\n        color: successColor\r\n    },\r\n    infoTableHeader: {\r\n        color: infoColor\r\n    },\r\n    roseTableHeader: {\r\n        color: roseColor\r\n    },\r\n    grayTableHeader: {\r\n        color: grayColor\r\n    },\r\n    table: {\r\n        width: \"100%\",\r\n        maxWidth: \"100%\",\r\n        backgroundColor: \"transparent\",\r\n        borderSpacing: \"0\",\r\n        borderCollapse: \"collapse\"\r\n    },\r\n    tableHeadCell: {\r\n        color: \"inherit\",\r\n        ...defaultFont,\r\n        fontSize: \"1.4em\"\r\n    },\r\n    tableCell: {\r\n        ...defaultFont,\r\n        lineHeight: \"1.42857143\",\r\n        padding: \"12px 8px\",\r\n        verticalAlign: \"middle\",\r\n        fontSize: \"1.4em\",\r\n    },\r\n    tableResponsive: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: \"auto\"\r\n    },\r\n    tablePaginationRoot: {\r\n        position:'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n    tablePaginationCaption: {\r\n        ...defaultFont,\r\n        fontSize: 15\r\n    },\r\n    wrapperContainer: {\r\n        position: 'relative',\r\n    },\r\n    loadingProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n    },\r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// core components\r\nimport styles from './styles';\r\n\r\nfunction CustomTable({ ...props }) {\r\n    const { classes, tableHead, tableData, tableHeaderColor, containerHeight, rowsPerPage, totalCount, page, handleChangePage, isLoading } = props;\r\n    return (\r\n        <div className={classes.wrapperContainer}>\r\n            <div className={classes.tableResponsive} style={{height: containerHeight}}>\r\n                <Table className={classes.table}>\r\n                    {tableHead !== undefined ? (\r\n                        <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\r\n                            <TableRow>\r\n                                {tableHead.map((prop, key) => {\r\n                                    return (\r\n                                        <TableCell\r\n                                        className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                                        key={key}\r\n                                        >\r\n                                        {prop}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                    ) : null}\r\n                    <TableBody>\r\n                        {tableData.map((prop, key) => {\r\n                        return (\r\n                            <TableRow key={key}>\r\n                            {prop.map((prop, key) => {\r\n                                return (\r\n                                <TableCell className={classes.tableCell} key={key}>\r\n                                    {prop}\r\n                                </TableCell>\r\n                                );\r\n                            })}\r\n                            </TableRow>\r\n                        );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    classes={{\r\n                        root: classes.tablePaginationRoot,\r\n                        caption: classes.tablePaginationCaption,\r\n                    }} \r\n                    rowsPerPageOptions={[rowsPerPage]}\r\n                    component=\"div\"\r\n                    count={totalCount}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page - 1}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    // onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                    <CircularProgress size={36} className={classes.loadingProgress} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n  \r\nCustomTable.defaultProps = {\r\n    tableHeaderColor: \"gray\",\r\n    containerHeight: 755,\r\n    totalCount: 0,\r\n    rowsPerPage: 10,\r\n    page: 1,\r\n    isLoading: false,\r\n};\r\n  \r\nCustomTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    tableHeaderColor: PropTypes.oneOf([\r\n        \"black\",\r\n        \"warning\",\r\n        \"primary\",\r\n        \"danger\",\r\n        \"success\",\r\n        \"info\",\r\n        \"rose\",\r\n        \"gray\"\r\n    ]),\r\n    tableHead: PropTypes.arrayOf([PropTypes.string, PropTypes.object]),\r\n    // tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string | PropTypes.object))\r\n    tableData: PropTypes.arrayOf(PropTypes.arrayOf([PropTypes.string, PropTypes.object]))\r\n};\r\n\r\nexport default withStyles(styles)(CustomTable);","const styles = theme => ({\r\n    card: {\r\n        border: \"0\",\r\n        marginBottom: \"30px\",\r\n        marginTop: \"30px\",\r\n        borderRadius: \"6px\",\r\n        color: \"rgba(0, 0, 0, 0.87)\",\r\n        background: \"#fff\",\r\n        width: \"100%\",\r\n        boxShadow: \"0 1px 4px 0 rgba(0, 0, 0, 0.14)\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minWidth: \"0\",\r\n        wordWrap: \"break-word\",\r\n        fontSize: \".875rem\"\r\n    },\r\n    cardPlain: {\r\n        background: \"transparent\",\r\n        boxShadow: \"none\"\r\n    },\r\n    cardProfile: {\r\n        marginTop: \"30px\",\r\n        textAlign: \"center\"\r\n    },\r\n    cardChart: {\r\n        \"& p\": {\r\n          marginTop: \"0px\",\r\n          paddingTop: \"0px\"\r\n        }\r\n    }    \r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nfunction Card({ ...props }) {\r\n    const {\r\n        classes,\r\n        className,\r\n        children,\r\n        plain,\r\n        profile,\r\n        chart,\r\n        ...rest\r\n    } = props;\r\n    const cardClasses = classNames({\r\n        [classes.card]: true,\r\n        [classes.cardPlain]: plain,\r\n        [classes.cardProfile]: profile,\r\n        [classes.cardChart]: chart,\r\n        [className]: className !== undefined\r\n    });\r\n    return (\r\n      <div className={cardClasses} {...rest}>\r\n        {children}\r\n      </div>\r\n    );\r\n}\r\n  \r\nCard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    plain: PropTypes.bool,\r\n    profile: PropTypes.bool,\r\n    chart: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(Card);","import {\r\n    warningCardHeader,\r\n    successCardHeader,\r\n    dangerCardHeader,\r\n    infoCardHeader,\r\n    primaryCardHeader,\r\n    secondaryCardHeader,\r\n    roseCardHeader\r\n} from \"../../../App/styles\";\r\n\r\nconst styles = {\r\n    cardHeader: {\r\n        padding: \"0.75rem 1.25rem\",\r\n        marginBottom: \"0\",\r\n        borderBottom: \"none\",\r\n        background: \"transparent\",\r\n        zIndex: \"3 !important\",\r\n        \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n            margin: \"0 15px\",\r\n            padding: \"0\",\r\n            position: \"relative\",\r\n            color: \"#FFFFFF\"\r\n        },\r\n        \"&:first-child\": {\r\n            borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n        },\r\n        \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n            \"&:not($cardHeaderIcon)\": {\r\n            borderRadius: \"3px\",\r\n            marginTop: \"-20px\",\r\n            padding: \"15px\"\r\n            }\r\n        },\r\n        \"&$cardHeaderStats svg\": {\r\n            fontSize: \"36px\",\r\n            lineHeight: \"56px\",\r\n            textAlign: \"center\",\r\n            width: \"36px\",\r\n            height: \"36px\",\r\n            margin: \"10px 10px 4px\"\r\n        },\r\n        \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n            fontSize: \"36px\",\r\n            lineHeight: \"56px\",\r\n            width: \"56px\",\r\n            height: \"56px\",\r\n            textAlign: \"center\",\r\n            overflow: \"unset\",\r\n            marginBottom: \"1px\"\r\n        },\r\n        \"&$cardHeaderStats$cardHeaderIcon\": {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    cardHeaderPlain: {\r\n        marginLeft: \"0px !important\",\r\n        marginRight: \"0px !important\"\r\n    },\r\n    cardHeaderStats: {\r\n        \"& $cardHeaderIcon\": {\r\n            textAlign: \"right\"\r\n        },\r\n        \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n            margin: \"0 !important\"\r\n        }\r\n    },\r\n    cardHeaderIcon: {\r\n        \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$secondaryCardHeader,&$roseCardHeader\": {\r\n            background: \"transparent\",\r\n            boxShadow: \"none\"\r\n        },\r\n        \"& i,& .material-icons\": {\r\n            width: \"33px\",\r\n            height: \"33px\",\r\n            textAlign: \"center\",\r\n            lineHeight: \"33px\"\r\n        },\r\n        \"& svg\": {\r\n            width: \"24px\",\r\n            height: \"24px\",\r\n            textAlign: \"center\",\r\n            lineHeight: \"33px\",\r\n            margin: \"5px 4px 0px\"\r\n        }\r\n    },\r\n    warningCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...warningCardHeader\r\n        }\r\n    },\r\n    successCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...successCardHeader\r\n        }\r\n    },\r\n    dangerCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...dangerCardHeader\r\n        }\r\n    },\r\n    infoCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...infoCardHeader\r\n        }\r\n    },\r\n    primaryCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...primaryCardHeader\r\n        }\r\n    },\r\n    secondaryCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...secondaryCardHeader\r\n        }\r\n    },\r\n    roseCardHeader: {\r\n        color: \"#FFFFFF\",\r\n        \"&:not($cardHeaderIcon)\": {\r\n            ...roseCardHeader\r\n        }\r\n    }\r\n};\r\n  \r\nexport default styles;","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nfunction CardHeader({ ...props }) {\r\n    const {\r\n        classes,\r\n        className,\r\n        children,\r\n        color,\r\n        plain,\r\n        stats,\r\n        icon,\r\n        ...rest\r\n    } = props;\r\n    const cardHeaderClasses = classNames({\r\n        [classes.cardHeader]: true,\r\n        [classes[color + \"CardHeader\"]]: color,\r\n        [classes.cardHeaderPlain]: plain,\r\n        [classes.cardHeaderStats]: stats,\r\n        [classes.cardHeaderIcon]: icon,\r\n        [className]: className !== undefined\r\n    });\r\n    return (\r\n        <div className={cardHeaderClasses} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n  \r\nCardHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"rose\"\r\n    ]),\r\n    plain: PropTypes.bool,\r\n    stats: PropTypes.bool,\r\n    icon: PropTypes.bool\r\n};\r\n  \r\nexport default withStyles(styles)(CardHeader);","const styles = theme => ({\r\n    cardBody: {\r\n        padding: \"0.9375rem 20px\",\r\n        flex: \"1 1 auto\",\r\n        WebkitBoxFlex: \"1\",\r\n        position: \"relative\"\r\n    },\r\n    cardBodyPlain: {\r\n        paddingLeft: \"5px\",\r\n        paddingRight: \"5px\"\r\n    },\r\n    cardBodyProfile: {\r\n        marginTop: \"15px\"\r\n    }\r\n});\r\n    \r\nexport default styles;","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nfunction CardBody({ ...props }) {\r\n    const { classes, className, children, plain, profile, ...rest } = props;\r\n    const cardBodyClasses = classNames({\r\n        [classes.cardBody]: true,\r\n        [classes.cardBodyPlain]: plain,\r\n        [classes.cardBodyProfile]: profile,\r\n        [className]: className !== undefined\r\n    });\r\n    return (\r\n        <div className={cardBodyClasses} {...rest}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n  \r\nCardBody.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    plain: PropTypes.bool,\r\n    profile: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(CardBody);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    tableActionButton: {\r\n        width: 40,\r\n        height: 40,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n    },\r\n\r\n    tableActionButtonIcon: {\r\n        width: \"20px\",\r\n        height: \"20px\"\r\n    },\r\n    icon: {\r\n        backgroundColor: \"transparent\",\r\n        // color: dangerColor,\r\n        boxShadow: \"none\"\r\n    },\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    content: {\r\n        fontSize:15\r\n    },\r\n    button: {\r\n        fontSize:13\r\n    }\r\n};\r\n\r\nclass ConfirmDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOK = () => {\r\n        this.setState({ open: false });\r\n        this.props.onDelete(this.props.index);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Grid >\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"Delete\"\r\n                    className={classes.tableActionButton}\r\n                    onClick={this.handleClickOpen}>\r\n                    <Delete\r\n                        className={\r\n                            classes.tableActionButtonIcon + \" \" + classes.icon\r\n                        }/>\r\n                </IconButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"dialog-title\"\r\n                    aria-describedby=\"dialog-description\">\r\n                    <DialogTitle id=\"dialog-title\" className={classes.title}>{\"Confirm\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"dialog-description\" className={classes.content}>\r\n                            Are you sure to delete this file?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" className={classes.button}>\r\n                            No\r\n                        </Button>\r\n                        <Button onClick={this.handleOK} color=\"primary\" autoFocus className={classes.button}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n// export default ConfirmDialog;\r\n  \r\nConfirmDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmDialog);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// core components\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Table from \"../../../views/Table\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloudDownloadOutlined from '@material-ui/icons/CloudDownloadOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { withSnackbar } from 'notistack';\r\nimport moment from 'moment-timezone'\r\n\r\nimport { styles } from './styles';\r\nimport ic_pdf from '../../../../assets/ic_pdf.svg';\r\nimport RemoveButton from './ConfirmDialog'\r\nimport Apis from '../../../../utils/Apis'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    state = {\r\n        totalCount: 0,\r\n        pageNumber: 1,\r\n        docs: [],\r\n        isLoading: false,\r\n    }\r\n\r\n    componentWillMount () {\r\n        console.log(\"CloudManage ---- componentWillMount\");\r\n        const { pageNumber } = this.state;\r\n        // this.getDocuments(pageNumber);\r\n    }\r\n\r\n    getDate(date_time) {\r\n        let date = moment(date_time).local().format(\"YYYY-MM-DD\");\r\n        return date;//date_time.substring(0, 10);\r\n    }\r\n\r\n    getTime(date_time) {\r\n        // http://momentjs.com/docs/#/manipulating/local/\r\n        let time = moment(date_time).local().format(\"hh:mm A\");\r\n        return time;//date_time.substring(11, 16);\r\n    }\r\n    \r\n    getDocuments = async (pageNumber) => {\r\n        const { classes } = this.props;\r\n        this.setState({ isLoading: true });\r\n        try {\r\n            let response = await Apis.getDocuments({pageNumber: pageNumber});\r\n            console.log(\"getDocuments\", response);\r\n\r\n            let respDocs = response.data.docs;\r\n            let docs = [];\r\n            if (respDocs != undefined && respDocs != null) {\r\n                for (let i = 0; i < respDocs.length; i ++) {\r\n                    // users = [...users, {email: respUsers[i].email, isAllowed: respUsers[i].email, ]\r\n                    docs = [...docs, \r\n                            [   \r\n                                <img style={{width:30, height:30}} src={ic_pdf} alt=\"pdf icon\"/>, \r\n                                <Typography noWrap className={classes.typographyContent}>{respDocs[i].name}</Typography>, \r\n                                <Typography noWrap className={classes.typographyContent}>{this.getDate(respDocs[i].date) + \" \" + this.getTime(respDocs[i].date)}</Typography>, \r\n                                <Typography noWrap className={classes.typographyContent}>{respDocs[i].size + \"KB\"}</Typography>, \r\n                                this.operationView(respDocs[i]._id, respDocs[i].url)\r\n                            ]\r\n                        ];\r\n                }\r\n                this.setState({pageNumber: pageNumber, totalCount: response.data.total, docs: docs, isLoading: false})\r\n            }\r\n            else {\r\n                this.setState({pageNumber: pageNumber, totalCount: 0, docs: docs, isLoading: false})\r\n            }\r\n            // this.setState({ isLoading: false });\r\n        }\r\n        catch (error) {\r\n            this.setState({isLoading: false});\r\n            let messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\r\n            \r\n            this.props.enqueueSnackbar(messageProperty.value, { \r\n                variant: 'error',\r\n            });\r\n        }\r\n    }\r\n\r\n    onDelete = async(index) => {\r\n        console.log(\"onDelete\", index);\r\n\r\n        this.setState({ isLoading: true });\r\n        try {\r\n            let response = await Apis.deleteDocument({id: index});\r\n            console.log ('Apis.deleteUser', response);\r\n            await this.getDocuments(this.state.pageNumber);\r\n        }\r\n        catch (error) {\r\n            this.setState({isLoading: false});\r\n            \r\n            let messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\r\n            \r\n            this.props.enqueueSnackbar(messageProperty.value, { \r\n                variant: 'error',\r\n            });\r\n        }\r\n    }\r\n\r\n    viewButton = (url) => {\r\n        const { classes } = this.props;\r\n        return (\r\n            <a href={url} target=\"_blank\" style={{textDecoration:'none'}} >\r\n                <Button color=\"secondary\" className={classes.viewButton} disableRipple disableFocusRipple >\r\n                    View\r\n                </Button>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    downloadButton = (url) => {\r\n        const { classes } = this.props;\r\n        return (\r\n            <a href={url} style={{textDecoration:'none'}} download=\"123123\">\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"Download\"\r\n                    className={classes.tableActionButton}>\r\n                    <CloudDownloadOutlined\r\n                        className={\r\n                            classes.tableActionButtonIcon + \" \" + classes.icon\r\n                        }/>\r\n                </IconButton>\r\n            </a>\r\n        )\r\n    }\r\n\r\n    removeButton = (index) => {\r\n        return (\r\n            // <IconButton\r\n            //     color=\"secondary\"\r\n            //     aria-label=\"Delete\"\r\n            //     className={classes.tableActionButton}>\r\n            //     <Delete\r\n            //         className={\r\n            //             classes.tableActionButtonIcon + \" \" + classes.icon\r\n            //         }/>\r\n            // </IconButton>\r\n            <RemoveButton onDelete={this.onDelete} index={index}/>\r\n        )\r\n    }\r\n\r\n    operationView = (index, url) => {\r\n        console.log(\"operationView\", index);\r\n        return (\r\n            <Grid container>\r\n                {this.viewButton(url)} {this.removeButton(index)}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        console.log(\"handleChangePage\", page);\r\n        this.getDocuments(page + 1);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { totalCount, pageNumber, docs, isLoading } = this.state;\r\n        return (\r\n            <GridContainer>\r\n                 <GridItem xs={12} sm={12} md={12}>\r\n                    \r\n                </GridItem>\r\n            </GridContainer>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n  \r\nexport default withStyles(styles)(withSnackbar(Dashboard));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\n\r\nexport const styles = theme => ({\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    tableActionButton: {\r\n        width: 40,\r\n        height: 40,\r\n        marginLeft: 5,\r\n        marginRight: 5\r\n    },\r\n\r\n    tableActionButtonIcon: {\r\n        width: \"20px\",\r\n        height: \"20px\"\r\n    },\r\n    icon: {\r\n        backgroundColor: \"transparent\",\r\n        // color: dangerColor,\r\n        boxShadow: \"none\"\r\n    },\r\n    viewButton : {\r\n        defaultFont,\r\n        height: 40,\r\n        fontSize: 11,\r\n        backgroundColor:'#fff'\r\n    },\r\n    typographyContent:{\r\n        defaultFont,\r\n        maxWidth: 250,\r\n        fontSize: 12,\r\n    }\r\n});\r\n","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n    textField: {\r\n        \r\n        width: 200,\r\n        fontSize:\"18px\",\r\n      },\r\n    operationButton : {\r\n        defaultFont,\r\n        height: 25,\r\n        width: 40,\r\n        fontSize: 11,\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      }\r\n    ,\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    main_container: {\r\n        minWidth: 400,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    typo:{\r\n        fontSize:\"large\",\r\n        textAlign:\"center\"\r\n    },\r\n    paper:{\r\n        padding:\"50px\",\r\n        marginTop:\"50px\",\r\n        alignItem:'center',\r\n        alignText:'center'\r\n    }  \r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass SendMail extends Component {\r\n    state = {\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = () => {\r\n        const { to,email, password, confirm_password, requesting,name,message} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        if (to === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input email to send message\");\r\n            return;\r\n        }\r\n        \r\n        if (message ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        Apis.sendMail(to,message)\r\n        this.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Send Mail to you Customer\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        To\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Your Name Please\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleChange('to')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Message\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"message\"\r\n                                        placeholder=\"Compose your message\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleChange('message')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Send Mail\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nSendMail.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(SendMail);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Assign extends Component {\r\n    state = {\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        sname:'',\r\n        username:'',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n\r\n        alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = () => {\r\n        const { password, snumber,username ,requesting} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        if (password === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input email to send message\");\r\n            return;\r\n        }\r\n\r\n        if (username === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input email to send message\");\r\n            return;\r\n        }\r\n        \r\n        if (snumber ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        Apis.assignUser({email:this.props.email, name:username, student_number:snumber, password: password})\r\n        this.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Please assign student , the number and password, username\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        User Name\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Username\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.username}\r\n                                        onChange={this.handleChange('username')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ib-snumber\" className={classes.inputlabel}>\r\n                                        Student Number\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ib-snumber\"\r\n                                        placeholder=\"Student Number\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.snumber}\r\n                                        onChange={this.handleChange('snumber')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ib-password\" className={classes.inputlabel}>\r\n                                        Password\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ib-password\"\r\n                                        placeholder=\"Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange('password')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Assign\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nAssign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Assign);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport './table.css'\r\nimport SendMail from \"./mail\"\r\nimport Assign from \"./assign\"\r\nclass Users extends Component {\r\n\r\n    state = {\r\n        totalCount: 0,\r\n        pageNumber: 1,\r\n        users: [],\r\n        isLoading: false,\r\n        raw_data:[]\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"AccountsMange ---- componentWillMount\");\r\n        this.getUsers();\r\n    }\r\n\r\n    async approve(email,row,state){\r\n        console.log(\"I am blocking\",row, state)\r\n        let result = await Apis.approve({\"email\":email,state:state})\r\n        if(result.status == 200){\r\n            console.log(\"Yes it is\")\r\n            let tmp = this.state.data;\r\n            tmp[row][11] = state\r\n            this.setState({\r\n                data:tmp\r\n            })\r\n        }\r\n        console.log(\"this is blocking result\",result)\r\n    }\r\n\r\n    showMail(email,row){\r\n        this.setState({email:email})\r\n        this.setState({open:true})\r\n    }\r\n\r\n    closeMail = ()=>{\r\n        this.setState({open:false, assign_open:false})\r\n    }\r\n    \r\n    // numberWithSpaces(x) {\r\n    //     return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    // }\r\n    async  getUsers(){\r\n        let response = await Apis.getUsers(\"admin\");\r\n        let data = []\r\n        console.log(\"respose\", response.data.data)\r\n        \r\n        if(response.status ==200){\r\n            if(!response.data.data) {\r\n                this.setState({\r\n                    data:data,\r\n                    raw_data:response.data.data,\r\n                    isLoading:true\r\n                })\r\n                return null;    \r\n            }\r\n            let tmp = response.data.data\r\n            \r\n            tmp.map((val,key)=>{\r\n                console.log(key,val)\r\n                data[key] = []\r\n                data[key][0] = val['first_name'] +\" \" +  val['sur_name']\r\n                data[key][1] = val['email']? val['email']: ''\r\n                data[key][2] = val['phone']? val['phone']: ''\r\n                data[key][3] = val['name']? val['name'] : ''\r\n                data[key][4] = val['password']? val['password'] : ''\r\n                data[key][5] = val['address'] ? val['address'] : ''\r\n                data[key][6] = val['city']? val['city']: ''\r\n                data[key][7] = val['province']? val['province']: ''\r\n                data[key][8] = val['postal_code']? val['postal_code'] :''\r\n                data[key][9] = val['dni']? val['dni'] : ''\r\n                data[key][10] = val['student_number']? val['student_number'] : ''\r\n                data[key][11] = val['status']? val['status'] : 0\r\n                // data[key][2] = val['block']\r\n            })\r\n            this.setState({\r\n                data:data,\r\n                isLoading:true,\r\n                open:false\r\n            })\r\n        }\r\n        else{\r\n            alert(\"error reading\")\r\n            this.setState({isLoading:true})\r\n        }        \r\n        // console.log(data)\r\n        // this.setState({data:data})\r\n    }\r\n\r\n    async assign(email,row){\r\n        // alert(`hello${email}`)\r\n        this.setState({email:email,assign_open:true})\r\n        \r\n    }\r\n    render() {\r\n        const columns = [{name: \"Name\"},{name : \"Email Address\"}, {name : \"Phone\"}, {name : \"Username\"},{ name : \"Password\"},  \r\n                {name:\"Address\"}, {name:\"City\"}, {name:\"Province\"},{name:\"Postal\"},{name:\"DNI\"},{name:\"Student\"},\r\n                {\r\n                name:\"Action\",\r\n                options: {\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    console.log(\"value\",value)\r\n                    console.log(\"tableMeta\",tableMeta)\r\n                    console.log(\"updateValue\",updateValue)\r\n                    return (\r\n                        <div className=\"i_actions\" style={{cursor:\"pointer\"}}>\r\n                            <i class=\"material-icons\" onClick={()=>{\r\n                                this.showMail(tableMeta['rowData'][1],tableMeta['rowIndex']);\r\n                                \r\n                            }}>\r\n                                email\r\n                            </i>\r\n                            {\r\n                                (value==\"0\")?\r\n                                    <i class=\"material-icons\" onClick={()=>{\r\n                                        this.approve(tableMeta['rowData'][1],tableMeta['rowIndex'],1);\r\n                                        \r\n                                    }}>\r\n                                        lock_open\r\n                                    </i>\r\n                                :\r\n                                    <i class=\"material-icons\" onClick={()=>{\r\n                                        this.approve(tableMeta[\"rowData\"][1],tableMeta['rowIndex'],0);\r\n                                    }}>\r\n                                        lock\r\n                                    </i>\r\n                            }\r\n\r\n                            <i class=\"material-icons\" onClick={()=>{\r\n                                        this.assign(tableMeta[\"rowData\"][1],tableMeta['rowIndex']);\r\n                                        \r\n                            }}>\r\n                                edit\r\n                            </i>\r\n\r\n                          \r\n                        </div>    \r\n                    );\r\n                  }\r\n                }         \r\n            }\r\n        ];\r\n\r\n        const data = this.state.data;\r\n\r\n        const options = {\r\n            rowsSelected:false,\r\n            selectableRows:false,\r\n            print:false,\r\n            download:false,\r\n            filter:false\r\n        };\r\n\r\n        const { classes } = this.props;\r\n        const {  isLoading } = this.state;\r\n        const {open} = this.state\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            \r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Users </h4>\r\n                            </CardHeader>\r\n                            <CardBody className=\"CustomTable\">\r\n                            \r\n                                <MUIDataTable\r\n                                    data={data}\r\n                                    columns={columns}\r\n                                    options={options}\r\n                                />\r\n                                {\r\n                                    this.state.open?\r\n                                        <SendMail open={true} onClose={this.closeMail} email={this.state.email}/>\r\n                                    :null    \r\n                                }\r\n                                {\r\n                                    this.state.assign_open?\r\n                                        <Assign open={true} onClose={this.closeMail} email={this.state.email}/>\r\n                                    :null\r\n                                }\r\n                                {   !isLoading?\r\n                                        <CircularProgress className={classes.progress}  color=\"secondary\" />\r\n                                    :null    \r\n                                }\r\n                                \r\n                                \r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        token: state.auth.token,\r\n        apiKey: state.auth.api_key\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Users)));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    \r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n\r\n    main_container: {\r\n        minWidth: 400\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    help:{\r\n        fontSize:20\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n        zIndex:10000\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      },\r\n    btnCancel:{\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    }  \r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Modal extends Component {\r\n    state = {\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = () => {\r\n        const { requesting,name,message} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        \r\n        if (message ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        Apis.publishNews(message)\r\n        this.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Publish News\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                \r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Message\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"message\"\r\n                                        placeholder=\"Compose your news here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={5}\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleChange('message')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Publish\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Modal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Preview extends Component {\r\n    state = {\r\n        detail:null,\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        let prev = await Apis.previewFactoringDocument(this.props.para.req_id);\r\n        this.setState({\r\n            detail:prev.data.data\r\n        })\r\n        console.log(\"this is the preview html\", prev)\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n    signNow = async () =>{\r\n         alert(this.props.id)\r\n        let resp = await Apis.signFactoringDocument(this.props.token, {document:this.state.detail,id:this.props.para.req_id})\r\n        console.log(\"response from signing document\",resp)\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Preview for request document\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        {\r\n                            (this.state.detail==null)?<CircularProgress size={50} className={classes.buttonProgress} />\r\n                            :\r\n                            <div ref = 'invoice' dangerouslySetInnerHTML={{__html: this.state.detail}} >\r\n                            </div>                         \r\n                        }\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.signNow}>\r\n                                    Sign Now\r\n                                </Button>\r\n\r\n                                <Button color=\"primary\" variant=\"contained\"  className={classes.btnCancel} \r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            \r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nPreview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Preview);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Modal from './modal'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport Preview from \"./preview\"\r\n\r\n\r\nconst columns = [\r\n    { id: '_id', label: 'ID', minWidth: 200 },\r\n\r\n    { id: 'content', label: 'Content', minWidth: 300 },\r\n    {\r\n        id: 'createdAt',\r\n        label: 'Created At',\r\n        minWidth: 120,\r\n        align: 'left',\r\n        format: value => value.toLocaleString(),\r\n    },\r\n];\r\n\r\nclass News extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page : 0,\r\n            rowsPerPage : 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open:false,\r\n            raw : {},\r\n            para:{},\r\n            value:0,\r\n            open2:false,\r\n            selectedCompanies : [],\r\n            data : []\r\n        }\r\n    }\r\n    \r\n\r\n   \r\n    fetchData = () =>{\r\n        this.setState({isLoading : false})\r\n        Apis.readNews().then((resp)=>{\r\n            console.log(resp.data)\r\n            this.setState({data:resp.data.data, isLoading:true})\r\n        }).catch((e)=>{\r\n            this.setState({isLoading:true})\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () =>{\r\n        this.setState({open : false})\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) =>{\r\n        // Apis.deleteNews(id).then((resp)=>{\r\n        //     this.fetchData()\r\n        // }).catch((e)=>{\r\n        //     alert(\"failed\")\r\n        // })\r\n        const name = '';\r\n        const age = 0;\r\n        const values = [];\r\n        const properties = {};\r\n        const answer = name || age || values || properties;\r\n        const check = answer == [];\r\n        alert(check)\r\n        console.log(\"=================\", answer)\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage : +event.target.value,\r\n            page : 0\r\n        })\r\n    }\r\n    render() {\r\n        let { totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>News</h4>\r\n                            </CardHeader>\r\n                            <CardBody className=\"CustomTable\">\r\n                            <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map(column => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth, fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                                <TableCell style={{  fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}>\r\n                                    Action\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" style={{cursor:\"pointer\"}} tabIndex={-1} key={row.code} onClick={() => {\r\n                                    }}>\r\n                                        {columns.map(column => {\r\n                                            \r\n                                            return (\r\n                                                <TableCell key={column._id}>\r\n                                                    {row[column.id]}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                        <TableCell key={\"a\"}>\r\n                                            <i class=\"material-icons\" onClick={()=>{\r\n                                                this.handleDelete(row['_id'])\r\n                                                // alert(row['_id'])\r\n                                            }}>\r\n                                                    delete\r\n                                            </i>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                                \r\n                            })}\r\n                            \r\n                        </TableBody>\r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={data.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        backIconButtonProps={{\r\n                            'aria-label': 'previous page',\r\n                        }}\r\n                        nextIconButtonProps={{\r\n                            'aria-label': 'next page',\r\n                        }}\r\n                        onChangePage={this.handleChangePage}\r\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n                                \r\n                                \r\n                                {   \r\n                                    !isLoading?\r\n                                        <CircularProgress className={classes.progress}  color=\"secondary\" />\r\n                                    :null    \r\n                                }\r\n                                \r\n                            </CardBody>\r\n                            <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                onClick = {()=>{\r\n                                    this.setState({open:true})\r\n                                }}\r\n                            >\r\n                                    \r\n                                    Create new message\r\n                            </Button>\r\n                        </Card>\r\n\r\n                        {\r\n                            this.state.open?\r\n                                <Modal open={true} onClose={this.handleClose} para={this.state.para} ></Modal>\r\n                            :\r\n                                null    \r\n                        }\r\n\r\n                        {\r\n                            this.state.open2?\r\n                                <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                            :\r\n                                null    \r\n                        }\r\n                        \r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNews.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(News)));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n    textField: {\r\n        width: 200,\r\n        fontSize:\"18px\",\r\n      },\r\n    operationButton : {\r\n        defaultFont,\r\n        height: 25,\r\n        width: 40,\r\n        fontSize: 11,\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 5,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      }\r\n    ,\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    main_container: {\r\n        minWidth: 400,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    nested:{\r\n        paddingLeft: theme.spacing.unit * 30,\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    btnCancel: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n        backgroundColor: 'Grey'\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    typo:{\r\n        fontSize:\"large\",\r\n        textAlign:\"center\"\r\n    },\r\n    paper:{\r\n        padding:\"50px\",\r\n        marginTop:\"50px\",\r\n        alignItem:'center',\r\n        alignText:'center'\r\n    }  ,\r\n    InputLabel:{\r\n        fontSize:\"18px\"\r\n    },\r\n    action_button:{\r\n        color : \"white\",\r\n        '&:hover':{\r\n            borderWidth:\"1px\",\r\n            border:\"groove\",\r\n            cursor:\"pointer\"\r\n        }\r\n    }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass FolderCreateModal extends Component {\r\n    state = {\r\n        detail: null,\r\n        to: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            to: ''\r\n        })\r\n        \r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    createFolder = async() => {\r\n        this.setState({requesting:true})\r\n        await Apis.createFaqFolder(this.state.to)\r\n        this.setState({requesting:false})\r\n        this.props.onCreate()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={true}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"To Create FAQ Folder\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n\r\n                            <Grid container\r\n                                direction=\"column\">\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Folder Name\r\n                                        </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Name of Folder to Create here\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleChange('to')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                    onClick={this.createFolder}>\r\n                                    Create Folder\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnCancel}\r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFolderCreateModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(FolderCreateModal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass FileCreateModal extends Component {\r\n    state = {\r\n        detail: null,\r\n        to: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            to: ''\r\n        })\r\n        \r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    createFile = async() => {\r\n        let data = {}\r\n        data.id = this.props.id\r\n        data.content = {}\r\n        data.content['question'] = this.state.question\r\n        data.content['answer'] = this.state.answer\r\n        this.setState({requesting:true})\r\n        await Apis.createFaqFile(data)\r\n        this.setState({requesting:false})\r\n        this.props.onCreate()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={true}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {`To Create Question and Answer`}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n\r\n                            <Grid container\r\n                                direction=\"column\">\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Question\r\n                                        </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Name of Folder to Create here\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.question}\r\n                                        onChange={this.handleChange('question')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Answer\r\n                                        </InputLabel>\r\n                                        <TextField\r\n                                            multiline={true}\r\n                                            id=\"message\"\r\n                                            placeholder=\"Compose your answer\"\r\n                                            classes={{\r\n                                                \r\n                                                root: classes.inputbaseRoot,\r\n                                                input: classes.inputbaseInput,\r\n                                                input: classes.TextField\r\n                                            }}\r\n                                            rows = {3}\r\n                                            value={this.state.answer}\r\n                                            onChange={this.handleChange('answer')}\r\n                                            fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                    onClick={this.createFile}>\r\n                                    Create QA\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnCancel}\r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileCreateModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(FileCreateModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n// core components\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { styles } from './styles';\r\nimport { createStyles, withStyles } from '@material-ui/core/styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport CreateNewFolder from '@material-ui/icons/CreateNewFolder';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Subject from '@material-ui/icons/Subject';\r\nimport FolderCreateModal from './folder_create';\r\nimport FileCreateModal from './file_create'\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nclass Faq extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            fetching: false,\r\n            selected: 0,\r\n            files: [],\r\n            file_selected: null,\r\n            openFolderCreate: false,\r\n            openFileCreate: false\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        this.setState({ fetching: true })\r\n        Apis.getFaq().then((resp) => {\r\n            let data = resp.data.data\r\n            this.setState({ fetching: false, data: data, openFolderCreate: false, openFileCreate: false })\r\n\r\n        }).catch((e) => {\r\n            this.setState({ fetching: false, data: [], openFolderCreate: false, openFileCreate: false })\r\n        })\r\n    }\r\n\r\n    handleCreateFolder = (name) => {\r\n        this.setState({ openFolderCreate: true })\r\n    }\r\n    handleDeleteFolder = ()=>{\r\n        if(this.state.selected != null){\r\n            this.setState({fetching:true})\r\n            Apis.deleteFaqFolder(this.state.data[this.state.selected]['_id']).then((resp)=>{\r\n                this.fetchData()\r\n            }).catch((e)=>{\r\n                console.log(e)\r\n                this.setState({fetching:false})\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    handleCreateFile = () => {\r\n        this.setState({ openFileCreate: true })\r\n    }\r\n    handleDeleteFile = ()=>{\r\n        if(this.state.selected != null && this.state.file_selected != null){\r\n            this.setState({fetching:true})\r\n            let data = {}\r\n            data.folder_id = this.state.data[this.state.selected]['_id']\r\n            data.qa_id = this.state.data[this.state.selected]['qas'][this.state.file_selected]['_id']\r\n            Apis.deleteFaq(data.folder_id, data.qa_id).then((resp)=>{\r\n                this.fetchData()\r\n            }).catch((e)=>{\r\n                console.log(e)\r\n                this.setState({fetching:false})\r\n            })\r\n            \r\n        }\r\n    }\r\n    onCloseFolderCreate = () => {\r\n        this.setState({ openFolderCreate: false })\r\n    }\r\n    onCloseFileCreate = () => {\r\n        this.setState({ openFileCreate: false })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    render() {\r\n        let classes = this.props.classes\r\n        let { fetching, data, selected } = this.state\r\n\r\n        let folderItem = (item, key) => {\r\n            return (\r\n                <ListItem button selected={this.state.selected == key}\r\n                    onClick={() => {\r\n                        this.setState({ selected: key, file_selected: null })\r\n                        console.log(item)\r\n                    }}\r\n                >\r\n                    <ListItemIcon>\r\n                        <FolderIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={item.folder_name} />\r\n                </ListItem>\r\n            )\r\n        }\r\n\r\n        let fileItem = (item, key) => {\r\n            return (\r\n                <>\r\n                    <ListItem button selected={this.state.file_selected == key}\r\n                        onClick={() => {\r\n                            this.setState({ file_selected: key })\r\n                        }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Subject />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.question} />\r\n                    </ListItem>\r\n\r\n                    <Collapse in={this.state.file_selected == key} timeout=\"auto\" unmountOnExit>\r\n                        <ListItemText className={classes.nested} style={{padding:\"10px\",paddingLeft:\"30px\",whiteSpace:\"pre-line\"}} primary={`${item.answer}`} />\r\n                    </Collapse>\r\n\r\n\r\n                </>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <GridContainer>\r\n\r\n                <GridItem xs={12} sm={12} md={4}>\r\n\r\n                    <Card>\r\n                        <CardHeader color={'primary'}>\r\n                            <CreateNewFolder className={classes.action_button} onClick={() => {\r\n                                this.handleCreateFolder();\r\n                            }}></CreateNewFolder>\r\n                            <DeleteIcon className={classes.action_button} style={{ float: 'right' }}\r\n                                onClick={()=>{\r\n                                    this.handleDeleteFolder()}\r\n                                }\r\n                             />\r\n                            <EditIcon className={classes.action_button} style={{ float: 'right' }} \r\n                                // onClick={this.handleDeleteFolder}\r\n                            />\r\n                        </CardHeader>\r\n                        <CardBody className=\"CustomTable\">\r\n                            {\r\n                                fetching ? <CircularProgress></CircularProgress> : null\r\n                            }\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                    {\r\n\r\n                                        data.map((prop, key) => {\r\n                                            return folderItem(prop, key)\r\n                                        })\r\n\r\n                                    }\r\n                                </List>\r\n                            </GridItem>\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                    <Card>\r\n                        <CardHeader color={'secondary'}>\r\n                            <AddBoxIcon className={classes.action_button} onClick={() => {\r\n                                this.handleCreateFile();\r\n                            }} />\r\n                            <DeleteIcon className={classes.action_button} style={{ float: 'right' }} \r\n                                onClick={()=>{\r\n                                    this.handleDeleteFile()\r\n                                }}\r\n                            />\r\n                            <EditIcon className={classes.action_button} style={{ float: 'right' }} />\r\n                        </CardHeader>\r\n                        <CardBody className=\"CustomTable\">\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                    {\r\n                                        data && data[selected] ?\r\n                                            data[selected]['qas'].map((prop, key) => {\r\n                                                return fileItem(prop, key)\r\n                                            })\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </List>\r\n                            </GridItem>\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n                {\r\n                    this.state.openFolderCreate ?\r\n                        <FolderCreateModal onCreate={this.fetchData} onClose={this.onCloseFolderCreate}></FolderCreateModal>\r\n                        : null\r\n                }\r\n                {\r\n                    this.state.openFileCreate ?\r\n                        <FileCreateModal onCreate={this.fetchData} onClose={this.onCloseFileCreate} id={this.state.data[selected]._id}></FileCreateModal>\r\n                        : null\r\n                }\r\n            </GridContainer>\r\n        )\r\n    }\r\n}\r\n\r\nFaq.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        token: state.auth.token,\r\n        apiKey: state.auth.api_key,\r\n        companies: state.auth.companies\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Faq)));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    \r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n\r\n    main_container: {\r\n        minWidth: 400\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    help:{\r\n        fontSize:20\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n        zIndex:10000\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      },\r\n    btnCancel:{\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    }  \r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport firebase from \"firebase\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport GridItem from \"../../../views/GridItem\";\r\nconst config = {\r\n    apiKey: \"AIzaSyDs-AM6a4friRKfD5pHWYC_syorBQ6MDnU\",\r\n    authDomain: \"neostudio-4034f.firebaseapp.com\",\r\n    storageBucket: \"gs://neostudio-4034f.appspot.com\"\r\n};\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n}\r\nclass FileCreateModal extends Component {\r\n    state = {\r\n        detail: null,\r\n        to: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        username: \"\",\r\n        avatar: \"\",\r\n        isUploading: false,\r\n        progress: 0,\r\n        pubURL: null\r\n    };\r\n\r\n    \r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n\r\n    handleUploadSuccess = async (filename) => {\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(\"psico_exam\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ pubURL: url }));\r\n    };\r\n\r\n    componentDidMount() {\r\n       \r\n        this.setState({\r\n            to: ''\r\n        })\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    createFile = async () => {\r\n        if(!this.state.to) {\r\n            alert('Please input Filename')\r\n            return;\r\n        }\r\n        let data = {}\r\n        data['url'] = this.state.pubURL\r\n        data['Correct'] = this.state.to\r\n        this.setState({ requesting: true })\r\n        await Apis.createNewPsicoQA(data)\r\n        this.setState({ requesting: false })\r\n        this.props.onClose()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting,isUploading,progress } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={true}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {`Create Psico QA `}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n\r\n                            <Grid container\r\n                                direction=\"column\">\r\n                                <FileUploader\r\n                                    accept=\"image/*\"\r\n                                    name=\"avatar\"\r\n                                    randomizeFilename\r\n                                    storageRef={firebase.storage().ref('psico_exam')}\r\n                                    onUploadStart={this.handleUploadStart}\r\n                                    onUploadError={this.handleUploadError}\r\n                                    onUploadSuccess={this.handleUploadSuccess}\r\n                                    onProgress={this.handleProgress}\r\n                                />\r\n                                {\r\n                                    this.state.pubURL?\r\n                                        <GridItem>\r\n                                            <img width=\"500px\" src={this.state.pubURL}></img>\r\n                                        </GridItem>\r\n                                        \r\n                                    :\r\n                                        null    \r\n                                }\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Correct Answer\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Name of Folder to Create here\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleChange('to')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                {\r\n                                    isUploading && \r\n                                        <LinearProgress variant=\"buffer\" value={progress}  color=\"secondary\" />\r\n                                }\r\n                                \r\n                                \r\n                            </Grid>\r\n                            {(requesting || isUploading)&& <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" disabled={((this.state.pubURL!=null)?false:true)} className={classes.btnNewAccount}\r\n                                    onClick={this.createFile}>\r\n                                    Save\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnCancel}\r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileCreateModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(FileCreateModal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Preview extends Component {\r\n    state = {\r\n        detail:null,\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        let prev = await Apis.previewRealFactoringDocument(this.props.para.req_id);\r\n        this.setState({\r\n            detail:prev.data.data\r\n        })\r\n        console.log(\"this is the preview html\", prev)\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n    signNow = async () =>{\r\n         alert(this.props.id)\r\n        let resp = await Apis.signRealFactoringDocument(this.props.token, {document:this.state.detail,id:this.props.para.req_id})\r\n        console.log(\"response from signing document\",resp)\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Preview for request document\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        {\r\n                            (this.state.detail==null)?<CircularProgress size={50} className={classes.buttonProgress} />\r\n                            :\r\n                            <div ref = 'invoice' dangerouslySetInnerHTML={{__html: this.state.detail}} >\r\n                            </div>                         \r\n                        }\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.signNow}>\r\n                                    Sign Now\r\n                                </Button>\r\n\r\n                                <Button color=\"primary\" variant=\"contained\"  className={classes.btnCancel} \r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            \r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nPreview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Preview);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Subject from '@material-ui/icons/Subject';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Modal from './modal_psico'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport Preview from \"./preview\"\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        id: '_id',\r\n        label: 'ID',\r\n        minWidth: 200,\r\n        format: value => value.slice(value.length - 4, value.length)\r\n    },\r\n\r\n    {\r\n        id: 'Question', label: 'Question and Answer', minWidth: 300,\r\n        format: value => value\r\n    }\r\n];\r\n\r\nclass Psico extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open: false,\r\n            raw: {},\r\n            para: {},\r\n            value: 0,\r\n            open2: false,\r\n            selectedCompanies: [],\r\n            data: [],\r\n            selected: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    fetchData = () => {\r\n        this.setState({ isLoading: false })\r\n        Apis.readPsicoExam().then((resp) => {\r\n            console.log(resp.data)\r\n            this.setState({ data: resp.data.data, isLoading: true })\r\n        }).catch((e) => {\r\n            this.setState({ isLoading: true })\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        Apis.deletePsico(id).then((resp) => {\r\n            this.fetchData()\r\n        }).catch((e) => {\r\n            alert(\"failed\")\r\n        })\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage: +event.target.value,\r\n            page: 0\r\n        })\r\n    }\r\n    render() {\r\n        let { totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Codigo Exam</h4>\r\n                            </CardHeader>\r\n                            <br></br>\r\n                            <GridContainer>\r\n\r\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.setState({ open: true })\r\n                                        }}\r\n                                    >\r\n                                        Create new QA\r\n                                        </Button>    \r\n                            \r\n                                    \r\n                                    <input type='file' ref='file' accept=\".csv\" style={{display:\"none\"}}\r\n                                        onChange ={e=>{\r\n                                            console.log(e.target.files[0])\r\n                                            if(e.target.files.length>0){\r\n                                                Apis.uploadOrtograf(e.target.files[0]).then(()=>{\r\n                                                    this.fetchData()\r\n                                                    \r\n                                                })\r\n                                                e.target.value = null\r\n                                            }\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Button color=\"\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            Apis.deletePsico('all').then(()=>{\r\n                                                this.fetchData()\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        Clear all\r\n                                    </Button>\r\n                            </GridContainer>\r\n                            \r\n                            <CardBody className=\"CustomTable\">\r\n                                <GridContainer>\r\n                                {this.state.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                                    return (\r\n                                        <GridItem  style={{ cursor: \"pointer\" }} tabIndex={-1} key={row.code} onClick={() => {\r\n                                        }}>\r\n                                            \r\n                                            <TableCell key={row._id}>\r\n                                                <img width={\"400px\"} src={row.url}></img>\r\n                                                <p>{row.Correct}</p>      \r\n                                            </TableCell>\r\n                                            <TableCell key={\"a\"}>\r\n                                                        <i class=\"material-icons\" onClick={() => {\r\n                                                            this.handleDelete(row['_id'])\r\n                                                        }}>\r\n                                                            delete\r\n                                                        </i>    \r\n                                                    </TableCell>\r\n                                                            \r\n                                        </GridItem>)\r\n                                })}\r\n                                </GridContainer>        \r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[10, 25, 100]}\r\n                                    component=\"div\"\r\n                                    count={data.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    backIconButtonProps={{\r\n                                        'aria-label': 'previous page',\r\n                                    }}\r\n                                    nextIconButtonProps={{\r\n                                        'aria-label': 'next page',\r\n                                    }}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                />\r\n\r\n\r\n                                {\r\n                                    !isLoading ?\r\n                                        <CircularProgress className={classes.progress} color=\"secondary\" />\r\n                                        : null\r\n                                }\r\n\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n\r\n                                {\r\n                                    this.state.open ?\r\n                                        <Modal open={true} onClose={this.handleClose} para={this.state.para} ></Modal>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.open2 ?\r\n                                        <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n                    );\r\n                }\r\n            }\r\n            \r\n            Psico.propTypes = {\r\n                        classes: PropTypes.object.isRequired\r\n                };\r\n                \r\nlet mapStateToProps = (state) => {\r\n    return {\r\n                    };\r\n                }\r\n                \r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Psico)));","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EngModal extends Component {\r\n    state = {\r\n       \r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = async () => {\r\n        const { requesting,name,message} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        \r\n        if (message ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        let data = this.state\r\n        await Apis.createNewCodigoQA(data)\r\n        this.onClose()\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Create English Question and Answer\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Description\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Compose your description here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Description}\r\n                                        onChange={this.handleChange('Description')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Question\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Compose your question here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Question}\r\n                                        onChange={this.handleChange('Question')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer1\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 1 \"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer1}\r\n                                        onChange={this.handleChange('Answer1')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer2\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 2\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer2}\r\n                                        onChange={this.handleChange('Answer2')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer3\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 3\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer3}\r\n                                        onChange={this.handleChange('Answer3')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer4\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 4\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer4}\r\n                                        onChange={this.handleChange('Answer4')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Correct Answer\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"c\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={1}\r\n                                        value={this.state.Correct}\r\n                                        onChange={this.handleChange('Correct')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nEngModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(EngModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Subject from '@material-ui/icons/Subject';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Modal from './modal_inges'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport Preview from \"./preview\"\r\n\r\n\r\nconst columns = [\r\n    {\r\n        id: '_id',\r\n        label: 'ID',\r\n        minWidth: 200,\r\n        format: value => value.slice(value.length - 4, value.length)\r\n    },\r\n\r\n    {\r\n        id: 'Question', label: 'Question and Answer', minWidth: 300,\r\n        format: value => value\r\n    }\r\n];\r\n\r\nclass Ingles extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open: false,\r\n            raw: {},\r\n            para: {},\r\n            value: 0,\r\n            open2: false,\r\n            selectedCompanies: [],\r\n            data: [],\r\n            selected: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    fetchData = () => {\r\n        this.setState({ isLoading: false })\r\n        Apis.readEnglishExam().then((resp) => {\r\n            console.log(resp.data)\r\n            this.setState({ data: resp.data.data, isLoading: true })\r\n        }).catch((e) => {\r\n            this.setState({ isLoading: true })\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        Apis.deleteEgnlish(id).then((resp) => {\r\n            this.fetchData()\r\n        }).catch((e) => {\r\n            alert(\"failed\")\r\n        })\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage: +event.target.value,\r\n            page: 0\r\n        })\r\n    }\r\n    render() {\r\n        let { totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Codigo Exam</h4>\r\n                            </CardHeader>\r\n                            <br></br>\r\n                            <GridContainer>\r\n\r\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.setState({ open: true })\r\n                                        }}\r\n                                    >\r\n                                        Create new QA\r\n                                        </Button>    \r\n                            \r\n                                    <Button color=\"secondary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.refs.file.click()\r\n                                        }}\r\n                                    >\r\n                                        Import from File\r\n                                    </Button>\r\n                                    <input type='file' ref='file' accept=\".csv\" style={{display:\"none\"}}\r\n                                        onChange ={e=>{\r\n                                            console.log(e.target.files[0])\r\n                                            if(e.target.files.length>0){\r\n                                                Apis.uploadEnglish(e.target.files[0]).then(()=>{\r\n                                                    this.fetchData()\r\n                                                    \r\n                                                })\r\n                                                e.target.value = null\r\n                                            }\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Button color=\"\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            Apis.deleteEnglish('all').then(()=>{\r\n                                                this.fetchData()\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        Clear all\r\n                                    </Button>\r\n                            </GridContainer>\r\n                            \r\n                            <CardBody className=\"CustomTable\">\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map(column => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth, fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                            <TableCell style={{ fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}>\r\n                                                Action\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                                            return (\r\n                                                <TableRow selected={this.state.selected == row['_id']} hover role=\"checkbox\" style={{ cursor: \"pointer\" }} tabIndex={-1} key={row.code} onClick={() => {\r\n                                                }}>\r\n                                                    {columns.map(column => {\r\n\r\n                                                        if (column.id == 'Question') {\r\n                                                            return (\r\n                                                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                                                    <ListItem button\r\n                                                                        onClick={() => {\r\n                                                                            this.setState({ selected: row['_id'] })\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <ListItemIcon>\r\n                                                                            <Subject />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={row['Question']} />\r\n                                                                    </ListItem>\r\n\r\n                                                                    <Collapse in={this.state.selected == row['_id']} timeout=\"auto\" unmountOnExit>\r\n                                                                    <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Description']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer1']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer2']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer3']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer4']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`Correct: ${row['Correct']})`} />\r\n                                                                    </Collapse>\r\n\r\n\r\n                                                                </List>\r\n                                                            )\r\n                                                        }\r\n                                                        return (\r\n                                                            <TableCell key={column._id}>\r\n                                                                {column.format((row[column.id]))}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    <TableCell key={\"a\"}>\r\n                                                        <i class=\"material-icons\" onClick={() => {\r\n                                                            this.handleDelete(row['_id'])\r\n                                                            // alert(row['_id'])\r\n                                                        }}>\r\n                                                            delete\r\n                                            </i>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n\r\n                                        })}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[10, 25, 100]}\r\n                                    component=\"div\"\r\n                                    count={data.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    backIconButtonProps={{\r\n                                        'aria-label': 'previous page',\r\n                                    }}\r\n                                    nextIconButtonProps={{\r\n                                        'aria-label': 'next page',\r\n                                    }}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                />\r\n\r\n\r\n                                {\r\n                                    !isLoading ?\r\n                                        <CircularProgress className={classes.progress} color=\"secondary\" />\r\n                                        : null\r\n                                }\r\n\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n\r\n                                {\r\n                                    this.state.open ?\r\n                                        <Modal open={true} onClose={this.handleClose} para={this.state.para} ></Modal>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.open2 ?\r\n                                        <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n                    );\r\n                }\r\n            }\r\n            \r\n            Ingles.propTypes = {\r\n                        classes: PropTypes.object.isRequired\r\n                };\r\n                \r\nlet mapStateToProps = (state) => {\r\n    return {\r\n                    };\r\n                }\r\n                \r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Ingles)));","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Modal extends Component {\r\n    state = {\r\n       \r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = async () => {\r\n        const { requesting,name,message} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        \r\n        if (message ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        let data = this.state\r\n        await Apis.createNewCodigoQA(data)\r\n        this.onClose()\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Create Codigo Question and Answer\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                \r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Question\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Compose your question here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Question}\r\n                                        onChange={this.handleChange('Question')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer1\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 1 \"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer1}\r\n                                        onChange={this.handleChange('Answer1')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer2\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 2\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer2}\r\n                                        onChange={this.handleChange('Answer2')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer3\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 3\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer3}\r\n                                        onChange={this.handleChange('Answer3')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Answer4\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Answer 4\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Answer4}\r\n                                        onChange={this.handleChange('Answer4')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Correct Answer\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"c\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={1}\r\n                                        value={this.state.Correct}\r\n                                        onChange={this.handleChange('Correct')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Modal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Subject from '@material-ui/icons/Subject';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Modal from './modal'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport Preview from \"./preview\"\r\n\r\n\r\nconst columns = [\r\n    {\r\n        id: '_id',\r\n        label: 'ID',\r\n        minWidth: 200,\r\n        format: value => value.slice(value.length - 4, value.length)\r\n    },\r\n\r\n    {\r\n        id: 'Question', label: 'Question and Answer', minWidth: 300,\r\n        format: value => value\r\n    }\r\n];\r\n\r\nclass Codigo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open: false,\r\n            raw: {},\r\n            para: {},\r\n            value: 0,\r\n            open2: false,\r\n            selectedCompanies: [],\r\n            data: [],\r\n            selected: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    fetchData = () => {\r\n        this.setState({ isLoading: false })\r\n        Apis.readCodigoExam().then((resp) => {\r\n            console.log(resp.data)\r\n            this.setState({ data: resp.data.data, isLoading: true })\r\n        }).catch((e) => {\r\n            this.setState({ isLoading: true })\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        Apis.deleteCodigo(id).then((resp) => {\r\n            this.fetchData()\r\n        }).catch((e) => {\r\n            alert(\"failed\")\r\n        })\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage: +event.target.value,\r\n            page: 0\r\n        })\r\n    }\r\n    render() {\r\n        let { totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Codigo Exam</h4>\r\n                            </CardHeader>\r\n                            <br></br>\r\n                            <GridContainer>\r\n\r\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.setState({ open: true })\r\n                                        }}\r\n                                    >\r\n                                        Create new QA\r\n                                        </Button>    \r\n                            \r\n                                    <Button color=\"secondary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.refs.file.click()\r\n                                        }}\r\n                                    >\r\n                                        Import from File\r\n                                    </Button>\r\n                                    <input type='file' ref='file' accept=\".csv\" style={{display:\"none\"}}\r\n                                        onChange ={e=>{\r\n                                            console.log(e.target.files[0])\r\n                                            if(e.target.files.length>0){\r\n                                                Apis.uploadCodigo(e.target.files[0]).then(()=>{\r\n                                                    this.fetchData()\r\n                                                    \r\n                                                })\r\n                                                e.target.value = null\r\n                                            }\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Button color=\"\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            Apis.deleteCodigo('all').then(()=>{\r\n                                                this.fetchData()\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        Clear all\r\n                                    </Button>\r\n                            </GridContainer>\r\n                            \r\n                            <CardBody className=\"CustomTable\">\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map(column => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth, fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                            <TableCell style={{ fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}>\r\n                                                Action\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                                            return (\r\n                                                <TableRow selected={this.state.selected == row['_id']} hover role=\"checkbox\" style={{ cursor: \"pointer\" }} tabIndex={-1} key={row.code} onClick={() => {\r\n                                                }}>\r\n                                                    {columns.map(column => {\r\n\r\n                                                        if (column.id == 'Question') {\r\n                                                            return (\r\n                                                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                                                    <ListItem button\r\n                                                                        onClick={() => {\r\n                                                                            this.setState({ selected: row['_id'] })\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <ListItemIcon>\r\n                                                                            <Subject />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={row['Question']} />\r\n                                                                    </ListItem>\r\n\r\n                                                                    <Collapse in={this.state.selected == row['_id']} timeout=\"auto\" unmountOnExit>\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer1']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer2']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer3']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`${row['Answer4']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`Correct: ${row['Correct']})`} />\r\n                                                                    </Collapse>\r\n\r\n\r\n                                                                </List>\r\n                                                            )\r\n                                                        }\r\n                                                        return (\r\n                                                            <TableCell key={column._id}>\r\n                                                                {column.format((row[column.id]))}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    <TableCell key={\"a\"}>\r\n                                                        <i class=\"material-icons\" onClick={() => {\r\n                                                            this.handleDelete(row['_id'])\r\n                                                            // alert(row['_id'])\r\n                                                        }}>\r\n                                                            delete\r\n                                            </i>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n\r\n                                        })}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[10, 25, 100]}\r\n                                    component=\"div\"\r\n                                    count={data.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    backIconButtonProps={{\r\n                                        'aria-label': 'previous page',\r\n                                    }}\r\n                                    nextIconButtonProps={{\r\n                                        'aria-label': 'next page',\r\n                                    }}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                />\r\n\r\n\r\n                                {\r\n                                    !isLoading ?\r\n                                        <CircularProgress className={classes.progress} color=\"secondary\" />\r\n                                        : null\r\n                                }\r\n\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n\r\n                                {\r\n                                    this.state.open ?\r\n                                        <Modal open={true} onClose={this.handleClose} para={this.state.para} ></Modal>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.open2 ?\r\n                                        <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n                    );\r\n                }\r\n            }\r\n            \r\nCodigo.propTypes = {\r\n                        classes: PropTypes.object.isRequired\r\n                };\r\n                \r\nlet mapStateToProps = (state) => {\r\n    return {\r\n                    };\r\n                }\r\n                \r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Codigo)));","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EngModal extends Component {\r\n    state = {\r\n       \r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n   \r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = async () => {\r\n        const { requesting,name,message} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        \r\n        if (message ==\"\") {\r\n            this.props.onAlertMessage(\"error\", \"Message can't be empty\");\r\n            return;\r\n        }\r\n        let data = this.state\r\n        await Apis.createNewOrtografQA(data)\r\n        this.onClose()\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Create English Question and Answer\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Correct\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Compose your description here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Correct}\r\n                                        onChange={this.handleChange('Correct')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Description1\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Compose your Description1 here\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Description1}\r\n                                        onChange={this.handleChange('Description1')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Incorrect\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Incorrect \"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Incorrect}\r\n                                        onChange={this.handleChange('Incorrect')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Description2\r\n                                    </InputLabel>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        id=\"question\"\r\n                                        placeholder=\"Write here Description 2\"\r\n                                        classes={{\r\n                                            \r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                            input: classes.TextField\r\n                                        }}\r\n                                        rows={3}\r\n                                        value={this.state.Description2}\r\n                                        onChange={this.handleChange('Description2')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Create\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nEngModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(EngModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Subject from '@material-ui/icons/Subject';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Modal from './modal_ortograf'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport Preview from \"./preview\"\r\n\r\n\r\nconst columns = [\r\n    {\r\n        id: '_id',\r\n        label: 'ID',\r\n        minWidth: 200,\r\n        format: value => value.slice(value.length - 4, value.length)\r\n    },\r\n\r\n    {\r\n        id: 'Question', label: 'Question and Answer', minWidth: 300,\r\n        format: value => value\r\n    }\r\n];\r\n\r\nclass Ortograf extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open: false,\r\n            raw: {},\r\n            para: {},\r\n            value: 0,\r\n            open2: false,\r\n            selectedCompanies: [],\r\n            data: [],\r\n            selected: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    fetchData = () => {\r\n        this.setState({ isLoading: false })\r\n        Apis.readOrtografExam().then((resp) => {\r\n            console.log(resp.data)\r\n            this.setState({ data: resp.data.data, isLoading: true })\r\n        }).catch((e) => {\r\n            this.setState({ isLoading: true })\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        Apis.deleteOrtograf(id).then((resp) => {\r\n            this.fetchData()\r\n        }).catch((e) => {\r\n            alert(\"failed\")\r\n        })\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage: +event.target.value,\r\n            page: 0\r\n        })\r\n    }\r\n    render() {\r\n        let { totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        return (\r\n            <div container>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Codigo Exam</h4>\r\n                            </CardHeader>\r\n                            <br></br>\r\n                            <GridContainer>\r\n\r\n                                    <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.setState({ open: true })\r\n                                        }}\r\n                                    >\r\n                                        Create new QA\r\n                                        </Button>    \r\n                            \r\n                                    <Button color=\"secondary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            this.refs.file.click()\r\n                                        }}\r\n                                    >\r\n                                        Import from File\r\n                                    </Button>\r\n                                    <input type='file' ref='file' accept=\".csv\" style={{display:\"none\"}}\r\n                                        onChange ={e=>{\r\n                                            console.log(e.target.files[0])\r\n                                            if(e.target.files.length>0){\r\n                                                Apis.uploadOrtograf(e.target.files[0]).then(()=>{\r\n                                                    this.fetchData()\r\n                                                    \r\n                                                })\r\n                                                e.target.value = null\r\n                                            }\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Button color=\"\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                        onClick={() => {\r\n                                            Apis.deleteOrtograf('all').then(()=>{\r\n                                                this.fetchData()\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        Clear all\r\n                                    </Button>\r\n                            </GridContainer>\r\n                            \r\n                            <CardBody className=\"CustomTable\">\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map(column => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth, fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                            <TableCell style={{ fontWeight: \"900\", borderBlockColor: \"black\", color: \"black\" }}>\r\n                                                Action\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\r\n                                            return (\r\n                                                <TableRow selected={this.state.selected == row['_id']} hover role=\"checkbox\" style={{ cursor: \"pointer\" }} tabIndex={-1} key={row.code} onClick={() => {\r\n                                                }}>\r\n                                                    {columns.map(column => {\r\n\r\n                                                        if (column.id == 'Question') {\r\n                                                            return (\r\n                                                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                                                    <ListItem button\r\n                                                                        onClick={() => {\r\n                                                                            this.setState({ selected: row['_id'] })\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <ListItemIcon>\r\n                                                                            <Subject />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={row['Correct']} />\r\n                                                                    </ListItem>\r\n\r\n                                                                    <Collapse in={this.state.selected == row['_id']} timeout=\"auto\" unmountOnExit>\r\n                                                                        <ListItemText className={[classes.nested]} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`Description1: ${row['Description1']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`Incorrect: ${row['Incorrect']}`} />\r\n                                                                        <ListItemText className={classes.nested} style={{ padding: \"10px\", paddingLeft: \"30px\", whiteSpace: \"pre-line\" }} primary={`Description2: ${row['Description2']}`} />\r\n                                                                    </Collapse>\r\n\r\n\r\n                                                                </List>\r\n                                                            )\r\n                                                        }\r\n                                                        return (\r\n                                                            <TableCell key={column._id}>\r\n                                                                {column.format((row[column.id]))}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                    <TableCell key={\"a\"}>\r\n                                                        <i class=\"material-icons\" onClick={() => {\r\n                                                            this.handleDelete(row['_id'])\r\n                                                            // alert(row['_id'])\r\n                                                        }}>\r\n                                                            delete\r\n                                            </i>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n\r\n                                        })}\r\n\r\n                                    </TableBody>\r\n                                </Table>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[10, 25, 100]}\r\n                                    component=\"div\"\r\n                                    count={data.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    backIconButtonProps={{\r\n                                        'aria-label': 'previous page',\r\n                                    }}\r\n                                    nextIconButtonProps={{\r\n                                        'aria-label': 'next page',\r\n                                    }}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                />\r\n\r\n\r\n                                {\r\n                                    !isLoading ?\r\n                                        <CircularProgress className={classes.progress} color=\"secondary\" />\r\n                                        : null\r\n                                }\r\n\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n\r\n                                {\r\n                                    this.state.open ?\r\n                                        <Modal open={true} onClose={this.handleClose} para={this.state.para} ></Modal>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                {\r\n                                    this.state.open2 ?\r\n                                        <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n                    );\r\n                }\r\n            }\r\n            \r\n            Ortograf.propTypes = {\r\n                        classes: PropTypes.object.isRequired\r\n                };\r\n                \r\nlet mapStateToProps = (state) => {\r\n    return {\r\n                    };\r\n                }\r\n                \r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Ortograf)));","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\n\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Psico from './psico'\r\nimport Ingles from './ingles'\r\nimport Codigo from './codigo'\r\nimport Ortograf from './ortograf'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\n\r\n\r\nconst columns = [\r\n    { id: '_id', label: 'ID', minWidth: 200 },\r\n\r\n    { id: 'content', label: 'Content', minWidth: 300 },\r\n    {\r\n        id: 'createdAt',\r\n        label: 'Created At',\r\n        minWidth: 120,\r\n        align: 'left',\r\n        format: value => value.toLocaleString(),\r\n    },\r\n];\r\n\r\nclass Exam extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            totalCount: 0,\r\n            pageNumber: 0,\r\n            page : 0,\r\n            rowsPerPage : 10,\r\n            users: [],\r\n            isLoading: false,\r\n            open:false,\r\n            raw : {},\r\n            para:{},\r\n            value:0,\r\n            open2:false,\r\n            selectedCompanies : [],\r\n            data : [],\r\n            value : 0\r\n        }\r\n    }\r\n    \r\n\r\n   \r\n    fetchData = () =>{\r\n        this.setState({isLoading : false})\r\n        Apis.readNews().then((resp)=>{\r\n            console.log(resp.data)\r\n            this.setState({data:resp.data.data, isLoading:true})\r\n        }).catch((e)=>{\r\n            this.setState({isLoading:true})\r\n            return\r\n\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n    handleClose = () =>{\r\n        this.setState({open : false})\r\n        this.fetchData()\r\n    }\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    }\r\n\r\n    handleChange = (event, value)=>{\r\n        this.setState({value:value},()=>{\r\n            // this.fetchData()\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) =>{\r\n        const name = '';\r\n        const age = 0;\r\n        const values = [];\r\n        const properties = {};\r\n        const answer = name || age || values || properties;\r\n        const check = answer == [];\r\n        alert(check)\r\n        console.log(\"=================\", answer)\r\n    }\r\n\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            rowsPerPage : +event.target.value,\r\n            page : 0\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        let { value, totalCount, pageNumber, users, isLoading, page, rowsPerPage, data } = this.state;\r\n        let { classes } = this.props;\r\n        \r\n        return (\r\n            <div container>\r\n                <div className=\"TabView\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        className={InputLabel}\r\n                    >\r\n                        <Tab label=\"Codigo\" className={InputLabel} />\r\n                        <Tab label=\"English\" className={InputLabel} />\r\n                        <Tab label=\"Ortograf\" className={InputLabel} />\r\n                        <Tab label=\"Picture puzzle\" className={InputLabel} />\r\n                    \r\n                    </Tabs>\r\n                    {value === 0 && <Codigo data = {data}></Codigo>}\r\n                    {value === 1 && <Ingles data = {data}></Ingles>}\r\n                    {value === 2 && <Ortograf data = {data}></Ortograf>}\r\n                    {value === 3 && <Psico data = {data}></Psico>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExam.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Exam)));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport {defaultFont} from \"../../../../App/styles\";\r\n\r\nconst styles = {\r\n    operationButton : {\r\n        defaultFont,\r\n        height: 25,\r\n        width: 40,\r\n        fontSize: 11,\r\n    },\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    content: {\r\n        fontSize:15\r\n    },\r\n    button: {\r\n        fontSize:13\r\n    }\r\n};\r\n\r\nclass ConfirmDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOk = () => {\r\n        const { email, onDelete } = this.props;\r\n        onDelete(email);\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"outlined\" className={classes.operationButton} disableRipple disableFocusRipple onClick={this.handleClickOpen}>\r\n                    DELETE\r\n                </Button>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"dialog-title\"\r\n                    aria-describedby=\"dialog-description\">\r\n                    <DialogTitle id=\"dialog-title\" className={classes.title}>{\"Confirm\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"dialog-description\" className={classes.content}>\r\n                            Are you sure to delete this user?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\" className={classes.button}>\r\n                            No\r\n                        </Button>\r\n                        <Button onClick={this.handleOk} color=\"primary\" autoFocus className={classes.button}>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default ConfirmDialog;\r\n  \r\nConfirmDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Table from \"../../../views/Table\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { styles } from './styles';\r\nimport ConfirmDialog from './ConfirmDialog'\r\nimport Apis from '../../../../utils/Apis'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport './table.css'\r\nimport { InputLabel } from \"@material-ui/core\";\r\nclass Invoices extends Component {\r\n\r\n    state = {\r\n        totalCount: 0,\r\n        pageNumber: 1,\r\n        users: [],\r\n        isLoading: false,\r\n        cdata: [],\r\n        value: 0,\r\n        selectedCompanies:[],\r\n        prevCompanies:[],\r\n        companyArray:[],\r\n    }\r\n    makeCompanyTableData(){\r\n        let tmp = this.props.companies;\r\n        let cdata = []\r\n        tmp.map((val, key) => {\r\n            cdata[key] = []\r\n            let t = JSON.parse(val['meta'])\r\n            cdata[key][0] = val['id']\r\n            cdata[key][1] = t['Name']\r\n            cdata[key][2] = t['Email']\r\n            cdata[key][3] = t['OrganizationNumber']\r\n            cdata[key][4] = t['Phone1']\r\n            cdata[key][5] = val['type']\r\n        })\r\n\r\n        this.setState({\r\n            cdata: cdata\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.makeCompanyTableData()\r\n    }\r\n    numberWithSpaces(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    compareArray(a,b){\r\n        console.log(\"compariang a\",a,\"and\",b)\r\n        if(a.length != b.length)\r\n            return false\r\n        a.sort()    \r\n        b.sort()\r\n        \r\n        for (let i=0; i < a.length; i++){\r\n            if (a[i] !== b[i])\r\n                return false\r\n        }\r\n        return true\r\n\r\n    }\r\n    async  getInvoices() {\r\n        console.log(this.props.token)\r\n        console.log(this.props.email)\r\n        console.log(this.props.companies)\r\n        let response = await Apis.getInvoices(this.props.token);\r\n        let data = []\r\n        console.log(\"respose\", response)\r\n        if (response.status == 200) {\r\n            if (!response.data) {\r\n                this.setState({\r\n                    data: data,\r\n                    isLoading: true\r\n                })\r\n                return null;\r\n            }\r\n            let tmp = response.data.Invoices\r\n\r\n            tmp.map((val, key) => {\r\n                console.log(key, val)\r\n                data[key] = []\r\n                data[key][0] = val['DocumentNumber']\r\n                data[key][1] = this.numberWithSpaces(val['Balance'])\r\n                data[key][2] = val['Currency']\r\n                data[key][3] = val['CustomerName']\r\n                data[key][4] = val['DueDate']\r\n                data[key][5] = val['InvoiceDate']\r\n                data[key][6] = val['OCR']\r\n                data[key][7] = val['Sent']\r\n                data[key][8] = this.numberWithSpaces(val['Total'])\r\n                data[key][9] = val['FinalPayDate']\r\n\r\n            })\r\n            this.setState({\r\n                data: data,\r\n                isLoading: true\r\n            })\r\n        }\r\n        else {\r\n            alert(\"error reading\")\r\n            this.setState({ isLoading: true })\r\n        }\r\n\r\n        \r\n        // console.log(data)\r\n        // this.setState({data:data})\r\n    }\r\n\r\n    makeCompanyArray(){\r\n        let i = 0;\r\n        let tmp = [];\r\n        for(i=0;i<this.state.selectedCompanies.length;i++){\r\n            tmp.push(this.props.companies[this.state.selectedCompanies[i]])\r\n        }\r\n        this.setState({\r\n            companyArray: tmp\r\n        })\r\n    }\r\n    handleChange = (event, value) => {\r\n        let t = []\r\n        if(value === 1){\r\n            this.getInvoices();\r\n            console.log(\"prev going to invoice \", this.state.prevCompanies)\r\n            this.makeCompanyArray()\r\n        }else{\r\n            \r\n            t = this.state.selectedCompanies\r\n            \r\n            this.setState({prevCompanies:t})\r\n            t = []\r\n            console.log(\"prev changed=====================================\", t)\r\n        }\r\n\r\n        this.setState({ value });\r\n\r\n      };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.getUsers(page + 1);\r\n    }\r\n\r\n    render() {\r\n        const columns = [\"DocumentNumber\", \"Balance\", \"Currency\", \"CustomerName\", \"DueDate\", \"InvoiceDate\", \"OCR\", \"Sent\", \"Total\", \"FinalPayDate\"];\r\n        const { value } = this.state;\r\n\r\n        let data = this.state.data;\r\n        const options = {\r\n            filterType: 'checkbox',\r\n            textLabels:{}\r\n        };\r\n        let cdata = this.state.cdata\r\n\r\n        const compCol = [\"ID\", \"Name\", \"Email\", 'Org.No', 'Phone', 'Status']\r\n        const compOptions = {\r\n            filterType: 'checkbox',\r\n            download: false,\r\n            print: false,\r\n            fixedHeader: false,\r\n            textLabels: {\r\n                selectedRows: {\r\n                    text: \"Company(s) selected\",\r\n                    delete: \"\"\r\n                    \r\n                }\r\n            },\r\n            rowsSelected:this.state.selectedCompanies,\r\n            onRowsSelect:(currentRowsSelected, allRowsSelected)=>{\r\n                console.log(\"currentRowsSelected\",currentRowsSelected)\r\n                console.log(\"current\", this.state.selectedCompanies)\r\n                console.log('prev state', this.state.prevCompanies)\r\n                let tmp = this.state.selectedCompanies\r\n                console.log(\"selected companies start\", tmp)\r\n                let index = tmp.indexOf(currentRowsSelected[0].index)\r\n                if (index == -1){\r\n                    tmp.push(currentRowsSelected[0].index)\r\n                    console.log(\"added companies start\", tmp)\r\n                }else{\r\n                    tmp.splice(index,1)\r\n                    console.log(\"removed companies start\", tmp)\r\n                }\r\n                this.setState({\r\n                    selectedCompanies:tmp\r\n                })\r\n            }\r\n        }\r\n       \r\n\r\n        const { classes } = this.props;\r\n        const { totalCount, pageNumber, users, isLoading } = this.state;\r\n        let invoiceTab = (\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n\r\n                        <CardHeader color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>Invoices </h4>\r\n                        </CardHeader>\r\n                        <CardBody className=\"CustomTable\">\r\n\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <MUIDataTable\r\n                                    data={data}\r\n                                    columns={columns}\r\n                                    options={options}\r\n                                />\r\n\r\n                                {!isLoading ?\r\n                                    <CircularProgress className={classes.progress} color=\"secondary\" />\r\n                                    : null\r\n                                }\r\n                            </GridItem>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </GridContainer>\r\n        )\r\n\r\n        let companyTab = (\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n\r\n                        <CardHeader color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>Companies </h4>\r\n                        </CardHeader>\r\n                        <CardBody className=\"CustomTable\">\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <MUIDataTable\r\n                                    \r\n                                    data={cdata}\r\n                                    columns={compCol}\r\n                                    options={compOptions}\r\n                                />\r\n\r\n                            </GridItem>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </GridContainer>\r\n        )\r\n        return (\r\n            <div container>\r\n                <div className=\"TabView\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        className={InputLabel}\r\n                    >\r\n                        <Tab label=\"Company\" className={InputLabel} />\r\n                        <Tab label=\"Invoices\" className={InputLabel} />\r\n                    \r\n                    </Tabs>\r\n                    {value === 0 && companyTab}\r\n                    {value === 1 && invoiceTab}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInvoices.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        token: state.auth.token,\r\n        apiKey: state.auth.api_key,\r\n        companies: state.auth.companies\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Invoices)));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\n\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n\r\n    operationButton : {\r\n        defaultFont,\r\n        height: 25,\r\n        width: 40,\r\n        fontSize: 11,\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      },\r\n      \r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n        password: '',\r\n        new_password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showNewPassword: false,\r\n        showConfirmPassword: false,\r\n        business:1\r\n    };\r\n\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n    \r\n    handleChangePassword = prop => event => {\r\n        this.setState({ [prop]: event.target.value });\r\n    };\r\n\r\n    handleChangeConfirmPassword = prop => event => {\r\n        this.setState({ [prop]: event.target.value });\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n    handleClickShowNewPassword = () => {\r\n        this.setState(state => ({ showNewPassword: !state.showNewPassword }));\r\n    };\r\n\r\n    handleClickShowConfirmPassword = () => {\r\n        this.setState(state => ({ showConfirmPassword: !state.showConfirmPassword }));\r\n    };\r\n\r\n    onAlertMessage = (type, message) => {\r\n        this.props.enqueueSnackbar(message, {\r\n            variant: type,\r\n        });\r\n    }\r\n\r\n    onUpdate = () => {\r\n        const { email } = this.props;\r\n        const { password, new_password, confirm_password } = this.state;\r\n\r\n        if (email === '') {\r\n            this.onAlertMessage(\"error\", \"Please input email to create new account!\");\r\n            return;\r\n        }\r\n        if (password === '') {\r\n            this.onAlertMessage(\"error\", \"Please input old password!\");\r\n            return;\r\n        }\r\n        if (new_password === '') {\r\n            this.onAlertMessage(\"error\", \"Please input new password!\");\r\n            return;\r\n        }\r\n        if (confirm_password === '') {\r\n            this.onAlertMessage(\"error\", \"Please input confirm password!\");\r\n            return;\r\n        }\r\n        if (new_password !== confirm_password) {\r\n            this.onAlertMessage(\"error\", \"Don't match two password!\");\r\n            return;\r\n        }\r\n\r\n        Apis.changePassword({ email, old_password: password, new_password })\r\n            .then(res => {\r\n                console.log(res);\r\n                this.onAlertMessage(\"success\", \"Successfully Changed.\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n                this.onAlertMessage(\"error\", err.response.data.message);\r\n            })\r\n    }\r\n\r\n    linkAccount =() =>{\r\n        return true\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { email } = this.props;\r\n        return (\r\n            <div>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={5}>\r\n                        <Card>\r\n                            <CardHeader color=\"success\">\r\n                                <h4 className={classes.cardTitleWhite}>Change User Password</h4>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Email\r\n                                </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibEmail\"\r\n                                        placeholder=\"you@example.com\"\r\n                                        defaultValue={email}\r\n                                        disabled\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibPassword\" className={classes.inputlabel}>\r\n                                        Old Password\r\n                                </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibPassword\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Old Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange('password')}\r\n                                        type={this.state.showPassword ? 'text' : 'password'}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}\r\n                                                >\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibNewPassword\" className={classes.inputlabel}>\r\n                                        New Password\r\n                                </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibNewPassword\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"New Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.new_password}\r\n                                        onChange={this.handleChange('new_password')}\r\n                                        type={this.state.showNewPassword ? 'text' : 'password'}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowNewPassword}\r\n                                                >\r\n                                                    {this.state.showNewPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibConfirmPassword\" className={classes.inputlabel}>\r\n                                        Confirm Password\r\n                                </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibConfirmPassword\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.confirm_password}\r\n                                        onChange={this.handleChange('confirm_password')}\r\n                                        type={this.state.showConfirmPassword ? 'text' : 'password'}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowConfirmPassword}\r\n                                                >\r\n                                                    {this.state.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                <Grid container xs={12} sm={12} md={12}>\r\n                                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" xs={12} sm={12} md={7}>\r\n                                    </Grid>\r\n                                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" xs={12} sm={12} md={5}>\r\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.btnUpdate} disableRipple onClick={this.onUpdate}>\r\n                                            Update Password\r\n                                    </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserProfile.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(UserProfile)));","export const styles = theme => ({\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    \r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        width: `calc(100% - ${theme.spacing.unit * 2}px)`\r\n    },\r\n    inputlabel: {\r\n        fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        // '&:focus': {\r\n        //     borderColor: '#80bdff',\r\n        //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        // },\r\n    },\r\n      \r\n    btnUpdate: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: theme.spacing.unit,\r\n        marginBottom: 20,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n});\r\n","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    \r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n\r\n    main_container: {\r\n        minWidth: 400\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    help:{\r\n        fontSize:20\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n        zIndex:10000\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 2,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      },\r\n    btnCancel:{\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    }  \r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PDF from 'react-pdf-js';\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport \"react-pdf-reader/dist/TextLayerBuilder.css\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\n\r\nclass Detail extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        type: 1,\r\n        numPages: null,\r\n        pageNumber: 1,\r\n        invoice: null,\r\n        attachment: null,\r\n        pdfview: ''\r\n    };\r\n    // onGetHelp = ()=>{\r\n    //     this.props.his\r\n    // }\r\n    onDocumentComplete = (pages) => {\r\n        this.setState({ page: 1, pages });\r\n    }\r\n\r\n    onAlertMessage = (type, message) => {\r\n        this.props.enqueueSnackbar(message, {\r\n            variant: type,\r\n        });\r\n    }\r\n\r\n    onSendRequest = async () => {\r\n        let resp = await Apis.signDebtDocument(this.props.token, this.props.para);\r\n    }\r\n    async componentDidMount() {\r\n        console.log(\"this is mount para\", this.props.para)\r\n        let resp = await Apis.getAnInvoice(this.props.token, this.props.para.invoice_id, this.props.para.access_token, this.props.para.is_manual, this.props.para.req_id,'debt')\r\n        console.log(\"this is the invoice details I got\", resp)\r\n        if (resp.status == 200) {\r\n            if (resp.data.data.Invoice) {\r\n                this.setState({\r\n                    invoice: resp.data.data.Invoice\r\n                })\r\n                this.onAlertMessage(\"info\", \"Succefully loaded invoice\")\r\n            } else {\r\n                console.log(\"this is attchment\", resp.data.data)\r\n                this.setState({\r\n                    attachment: resp.data.data,\r\n                    pdfview: '<iframe width=\"100%\" height=\"700\" src=\"' + resp.data.data + '\" />'\r\n                })\r\n                this.onAlertMessage(\"info\", \"Succefully loaded invoice\")\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.registered === 1) {\r\n            this.props.onClose();\r\n            return;\r\n        }\r\n\r\n        if (nextProps.registered === -1 && nextProps.error.body !== undefined) {\r\n            this.props.onAlertMessage(\"error\", nextProps.error.body.message);\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n\r\n    handleClickShowConfirmPassword = () => {\r\n        this.setState(state => ({ showConfirmPassword: !state.showConfirmPassword }));\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onSend = () => {\r\n\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        const invoice = this.state.invoice\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Invoice details\"}\r\n                    </DialogTitle>\r\n                    {\r\n                        (this.props.para.is_manual == 0) ?\r\n                            <DialogContent>\r\n                                {\r\n                                    this.state.invoice ?\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justify=\"center\"\r\n                                            alignItems='center'\r\n                                            className={classes.main_container}>\r\n\r\n                                            <Grid container\r\n                                                direction=\"column\">\r\n\r\n                                                <FormControl\r\n                                                    className={classes.formControl}>\r\n                                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                                        Invoice ID\r\n                                                </InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        id=\"Invoice Due\"\r\n                                                        placeholder=\"Your Name Please\"\r\n                                                        classes={{\r\n                                                            root: classes.inputbaseRoot,\r\n                                                            input: classes.inputbaseInput,\r\n                                                        }}\r\n                                                        value  = {this.state.invoice.DocumentNumber}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                                <FormControl\r\n                                                    className={classes.formControl}>\r\n                                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                                    Accounting Method\r\n                                            </InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        id=\"AccountingMethod\"\r\n                                                        placeholder=\"Accounting Method\"\r\n                                                        classes={{\r\n                                                            root: classes.inputbaseRoot,\r\n                                                            input: classes.inputbaseInput,\r\n                                                        }}\r\n                                                        value = {this.state.invoice.AccountingMethod}\r\n                                                        onChange={this.handleChange('name')}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                                <FormControl\r\n                                                    className={classes.formControl}>\r\n                                                    <InputLabel shrink htmlFor=\"Address1\" className={classes.inputlabel}>\r\n                                                        Accounting Method\r\n                                                    </InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        id=\"Address1\"\r\n                                                        placeholder=\"...\"\r\n                                                        classes={{\r\n                                                            root: classes.inputbaseRoot,\r\n                                                            input: classes.inputbaseInput,\r\n                                                        }}\r\n                                                        value = {this.state.invoice.Address1}\r\n                                                        onChange={this.handleChange('email')}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n                                                <FormControl\r\n                                                    className={classes.formControl}>\r\n                                                    <InputLabel shrink htmlFor=\"Currency\" className={classes.inputlabel}>\r\n                                                        Currency\r\n                                                    </InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        id=\"Currency\"\r\n                                                        placeholder=\"SEK , USD\"\r\n                                                        classes={{\r\n                                                            root: classes.inputbaseRoot,\r\n                                                            input: classes.inputbaseInput,\r\n                                                        }}\r\n                                                        onChange={this.handleChange('email')}\r\n                                                        value = {this.state.invoice.Currency}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </FormControl>\r\n\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    :\r\n                                    <CircularProgress></CircularProgress>\r\n                                }\r\n\r\n                            </DialogContent>\r\n                            :\r\n                            <DialogContent>\r\n                                <div alignItems=\"center\">\r\n                                    {\r\n                                        this.state.attachment ?\r\n                                            <div dangerouslySetInnerHTML={{ __html: this.state.pdfview }}>\r\n\r\n                                            </div>\r\n\r\n                                            :\r\n                                            <CircularProgress></CircularProgress>\r\n                                    }\r\n\r\n                                </div>\r\n                            </DialogContent>\r\n                    }\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                    onClick={this.onSendRequest}>\r\n                                    Send Sign Request\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.progress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDetail.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(withSnackbar(Detail));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Preview extends Component {\r\n    state = {\r\n        detail:null,\r\n        to:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            to:this.props.email\r\n        })\r\n        let prev = await Apis.previewDebtDocument(this.props.para.req_id);\r\n        this.setState({\r\n            detail:prev.data.data\r\n        })\r\n        console.log(\"this is the preview html\", prev)\r\n        // alert(this.props.email)\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n  \r\n    signNow = async () =>{\r\n         alert(this.props.id)\r\n        let resp = await Apis.signDebtDocument(this.props.token, {document:this.state.detail,id:this.props.para.req_id})\r\n        console.log(\"response from signing document\",resp)\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Preview for request document\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        {\r\n                            (this.state.detail==null)?<CircularProgress size={50} className={classes.buttonProgress} />\r\n                            :\r\n                            <div ref = 'invoice' dangerouslySetInnerHTML={{__html: this.state.detail}} >\r\n                            </div>                         \r\n                        }\r\n                        \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.signNow}>\r\n                                    Sign Now\r\n                                </Button>\r\n\r\n                                <Button color=\"primary\" variant=\"contained\"  className={classes.btnCancel} \r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                            \r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nPreview.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Preview);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// core components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Table from \"../../../views/Table\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport Detail from './details'\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport './table.css'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { InputLabel } from \"@material-ui/core\";\r\n\r\nimport Preview from \"./preview\"\r\nclass Debts extends Component {\r\n\r\n    state = {\r\n        totalCount: 0,\r\n        pageNumber: 1,\r\n        users: [],\r\n        isLoading: false,\r\n        open:false,\r\n        raw : {},\r\n        para:{},\r\n        value:0,\r\n        open2:false,\r\n        selectedCompanies : []\r\n    }\r\n\r\n    makeCompanyArray(){\r\n        let i = 0;\r\n        let tmp = [];\r\n        for(i=0;i<this.state.selectedCompanies.length;i++){\r\n            tmp.push(this.props.companies[this.state.selectedCompanies[i]])\r\n        }\r\n        this.setState({\r\n            companyArray: tmp\r\n        })\r\n    }\r\n    \r\n    makeCompanyTableData(){\r\n        let tmp = this.props.companies;\r\n        let cdata = []\r\n        tmp.map((val, key) => {\r\n            cdata[key] = []\r\n            let t = JSON.parse(val['meta'])\r\n            cdata[key][0] = val['id']\r\n            cdata[key][1] = t['Name']\r\n            cdata[key][2] = t['Email']\r\n            cdata[key][3] = t['OrganizationNumber']\r\n            cdata[key][4] = t['Phone1']\r\n            cdata[key][5] = val['type']\r\n        })\r\n\r\n        this.setState({\r\n            cdata: cdata\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.makeCompanyTableData();\r\n    }\r\n\r\n    numberWithSpaces(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    async  getInvoices(){\r\n        console.log(this.props.token)\r\n        console.log(this.props.email)\r\n        let response = await Apis.getDebtRequests(this.props.token);\r\n        let data = []\r\n        console.log(\"respose\", response)\r\n        if(response.status == 200){\r\n            if(!response.data) {\r\n                this.setState({\r\n                    data:data,\r\n                    isLoading:true\r\n                })\r\n                return null;\r\n            }\r\n\r\n            let tmp = response.data.data\r\n\r\n            this.setState({\r\n                raw :response.data.data\r\n            })\r\n\r\n            tmp.map((val,key)=>{\r\n                console.log(key,val)\r\n                data[key] = []\r\n                data[key][0] = val['invoice_id']\r\n                data[key][1] = val['email']\r\n                data[key][2] = val['name']\r\n                \r\n                let t = JSON.parse(val['meta'])\r\n                console.log(\"this is meta\", t)\r\n                data[key][3] = t['ZipCode']\r\n                data[key][4] = t['OrganizationNumber']\r\n                data[key][5] = t['BG']\r\n                data[key][6] = val['type']\r\n                data[key][7] = \"Details\"\r\n                data[key][8] = \"Preview\"\r\n            })\r\n            this.setState({\r\n                data:data,\r\n                isLoading:true\r\n            })\r\n        }\r\n        else{\r\n            alert(\"error reading\")\r\n            this.setState({isLoading:true})\r\n        }        \r\n        console.log(data)\r\n        this.setState({data:data})\r\n    }\r\n\r\n    \r\n    handleClose = ()=>{\r\n        this.setState({\r\n            open:false,\r\n            open2:false\r\n        })\r\n\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        let t = []\r\n        if(value === 1){\r\n            this.getInvoices();\r\n            console.log(\"prev going to invoice \", this.state.prevCompanies)\r\n        }else{\r\n            \r\n            t = this.state.selectedCompanies\r\n            this.setState({prevCompanies:t})\r\n            t = []\r\n            console.log(\"prev changed=====================================\", t)\r\n        }\r\n\r\n        this.setState({ value });\r\n\r\n      };\r\n    \r\n    showMail(id,row){\r\n        this.setState({id:id})\r\n        this.setState({open:true})\r\n\r\n    }\r\n\r\n    closeMail = ()=>{\r\n        this.setState({open:false})\r\n    }\r\n\r\n    handleDetail = (tableMeta) =>{\r\n        console.log(\"this is table meta data\",tableMeta)\r\n        let para = {}\r\n        para.is_manual = this.state.raw[tableMeta.rowIndex]['is_manual']\r\n        para.access_token = this.state.raw[tableMeta.rowIndex]['access_token']\r\n        para.invoice_id = this.state.raw[tableMeta.rowIndex]['invoice_id']\r\n        para.req_id = this.state.raw[tableMeta.rowIndex]['id']\r\n\r\n        this.setState({\r\n            para:para\r\n        },()=>{\r\n            this.setState({\r\n                open:true\r\n            })\r\n            console.log(\"para=\",this.state.para)\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    handlePreview = (tableMeta) =>{\r\n        console.log(\"this is table meta data\",tableMeta)\r\n        let para = {}\r\n        para.is_manual = this.state.raw[tableMeta.rowIndex]['is_manual']\r\n        para.access_token = this.state.raw[tableMeta.rowIndex]['access_token']\r\n        para.invoice_id = this.state.raw[tableMeta.rowIndex]['invoice_id']\r\n        para.req_id = this.state.raw[tableMeta.rowIndex]['id']\r\n\r\n        this.setState({\r\n            para:para\r\n        },()=>{\r\n            this.setState({\r\n                open2:true\r\n            })\r\n            console.log(\"para=\",this.state.para)\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { totalCount, pageNumber, users, isLoading } = this.state;\r\n        const data = this.state.data;\r\n        let cdata = this.state.cdata\r\n        const { classes } = this.props;\r\n        let value = this.state.value\r\n        const compCol = [\"ID\", \"Name\", \"Email\", 'Org.No', 'Phone', 'Type']\r\n        const compOptions = {\r\n            filterType: 'checkbox',\r\n            download: false,\r\n            print: false,\r\n            fixedHeader: false,\r\n            textLabels: {\r\n                selectedRows: {\r\n                    text: \"Company(s) selected\",\r\n                    delete: \"\"\r\n                    \r\n                }\r\n            },\r\n            rowsSelected:this.state.selectedCompanies,\r\n            onRowsSelect:(currentRowsSelected, allRowsSelected)=>{\r\n                console.log(\"currentRowsSelected\",currentRowsSelected)\r\n                console.log(\"current\", this.state.selectedCompanies)\r\n                console.log('prev state', this.state.prevCompanies)\r\n                let tmp = this.state.selectedCompanies\r\n                console.log(\"selected companies start\", tmp)\r\n                let index = tmp.indexOf(currentRowsSelected[0].index)\r\n                if (index == -1){\r\n                    tmp.push(currentRowsSelected[0].index)\r\n                    console.log(\"added companies start\", tmp)\r\n                }else{\r\n                    tmp.splice(index,1)\r\n                    console.log(\"removed companies start\", tmp)\r\n                }\r\n                this.setState({\r\n                    selectedCompanies:tmp\r\n                })\r\n            }\r\n        }\r\n\r\n        const columns = [{name:\"ID\"}, {name:\"Email\"}, {name:\"Name\"}, {name:\"Zip Code\"}, {name:\"OrgNumber\"},{name:\"BG\"},\r\n            {\r\n                name:\"Type\",\r\n                options:{\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                        return(\r\n                            <div className=\"i_actions\" style={{cursor:\"pointer\"}}>\r\n                                {(value == '0')?\"Not Signed\":\"Signed\"}\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                name:\"Details\",\r\n                options: {\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                        console.log(\"value\",value)\r\n                        console.log(\"tableMeta\",tableMeta)\r\n                        console.log(\"updateValue\",updateValue)\r\n                        return (\r\n                            <div className=\"i_actions\" style={{cursor:\"pointer\"}}>\r\n                                <i class=\"material-icons\" onClick={()=>{\r\n                                        this.handleDetail(tableMeta)\r\n                                    }\r\n                                }>\r\n                                    details\r\n                                </i>\r\n                            </div>    \r\n                        );\r\n                      }\r\n                    }  \r\n            },\r\n            {\r\n                name:\"Approve\",\r\n                options: {\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                        console.log(\"value\",value)\r\n                        console.log(\"tableMeta\",tableMeta)\r\n                        console.log(\"updateValue\",updateValue)\r\n                        return (\r\n                            <div className=\"i_actions\" style={{cursor:\"pointer\"}}>\r\n                                <i class=\"material-icons\" onClick={()=>{\r\n                                    this.handlePreview(tableMeta)\r\n                                }}>\r\n                                    drafts\r\n                                </i>\r\n                            </div>    \r\n                        );\r\n                      }\r\n                    }  \r\n            }\r\n        ];\r\n\r\n\r\n        const options = {\r\n            filterType: 'checkbox',\r\n        };\r\n\r\n        let companyTab = (\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                    <Card>\r\n\r\n                        <CardHeader color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>Companies </h4>\r\n                        </CardHeader>\r\n\r\n                        <CardBody className=\"CustomTable\">\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <MUIDataTable\r\n                                    \r\n                                    data={cdata}\r\n                                    columns={compCol}\r\n                                    options={compOptions}\r\n                                />\r\n\r\n                            </GridItem>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </GridContainer>\r\n        )\r\n        \r\n        let debtTab = (\r\n            <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <Card>\r\n                            \r\n                            <CardHeader color=\"primary\">\r\n                                <h4 className={classes.cardTitleWhite}>Debt Collection Requests </h4>\r\n                            </CardHeader>\r\n                            <CardBody className=\"CustomTable\">\r\n                            \r\n                                <MUIDataTable\r\n                                    data={data}\r\n                                    columns={columns}\r\n                                    options={options}\r\n                                />\r\n                                \r\n                                {   \r\n                                    !isLoading?\r\n                                        <CircularProgress className={classes.progress}  color=\"secondary\" />\r\n                                    :null    \r\n                                }\r\n                                \r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                        {\r\n                            this.state.open?\r\n                                <Detail open={true} onClose={this.handleClose} para={this.state.para} ></Detail>\r\n                            :\r\n                                null    \r\n                        }\r\n\r\n                        {\r\n                            this.state.open2?\r\n                                <Preview open={true} onClose={this.handleClose} para={this.state.para} ></Preview>\r\n                            :\r\n                                null    \r\n                        }\r\n                        \r\n                    </GridItem>\r\n                </GridContainer>\r\n        )\r\n        \r\n        return (\r\n            <div container>\r\n                <div className=\"TabView\">\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                            className={InputLabel}\r\n                        >\r\n                            <Tab label=\"Company\" className={InputLabel} />\r\n                            <Tab label=\"Borrow Requests\" className={InputLabel} />\r\n                        \r\n                        </Tabs>\r\n                        {value === 0 && companyTab}\r\n                        {value === 1 && debtTab}\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDebts.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        token: state.auth.token,\r\n        apiKey: state.auth.api_key,\r\n        companies: state.auth.companies\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Debts)));","import {\r\n    defaultFont\r\n} from \"../../../../App/styles\";\r\nimport red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    CustomTable:{\r\n        \" td\":{\r\n            fontSize: \"19px\",\r\n        }\r\n    },\r\n    cardCategoryWhite: {\r\n        \"&,& a,& a:hover,& a:focus\": {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\"\r\n        },\r\n        \"& a,& a:hover,& a:focus\": {\r\n            color: \"#FFFFFF\"\r\n        }\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n        \"& small\": {\r\n            color: \"#777\",\r\n            fontSize: \"65%\",\r\n            fontWeight: \"400\",\r\n            lineHeight: \"1\"\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12\r\n    },\r\n    textField: {\r\n        width: 200,\r\n        fontSize:\"18px\",\r\n      },\r\n    operationButton : {\r\n        defaultFont,\r\n        height: 25,\r\n        width: 40,\r\n        fontSize: 11,\r\n    },\r\n    progress: {\r\n        margin: theme.spacing.unit * 5,\r\n        position:\"absolute\",\r\n        left:'50%',\r\n        top : '180px'\r\n      }\r\n    ,\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    main_container: {\r\n        minWidth: 400,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    nested:{\r\n        paddingLeft: theme.spacing.unit * 30,\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    btnCancel: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n        backgroundColor: 'Grey'\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    typo:{\r\n        fontSize:\"large\",\r\n        textAlign:\"center\"\r\n    },\r\n    paper:{\r\n        padding:\"50px\",\r\n        marginTop:\"50px\",\r\n        alignItem:'center',\r\n        alignText:'center'\r\n    }  ,\r\n    InputLabel:{\r\n        fontSize:\"18px\"\r\n    },\r\n    action_button:{\r\n        color : \"white\",\r\n        '&:hover':{\r\n            borderWidth:\"1px\",\r\n            border:\"groove\",\r\n            cursor:\"pointer\"\r\n        }\r\n    }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass FolderCreateModal extends Component {\r\n    state = {\r\n        detail: null,\r\n        to: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            to: ''\r\n        })\r\n        \r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    createFolder = async() => {\r\n        this.setState({requesting:true})\r\n        await Apis.createMaterialFolder(this.state.to, this.props.type)\r\n        this.setState({requesting:false})\r\n        this.props.onCreate()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={true}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {`To Create Folder for ${this.props.type}`}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n\r\n                            <Grid container\r\n                                direction=\"column\">\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Folder Name\r\n                                        </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Name of Folder to Create here\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleChange('to')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount}\r\n                                    onClick={this.createFolder}>\r\n                                    Create Folder\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnCancel}\r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFolderCreateModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(FolderCreateModal);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { styles } from './styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport firebase from \"firebase\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst config = {\r\n    apiKey: \"AIzaSyDs-AM6a4friRKfD5pHWYC_syorBQ6MDnU\",\r\n    authDomain: \"neostudio-4034f.firebaseapp.com\",\r\n    storageBucket: \"gs://neostudio-4034f.appspot.com\"\r\n};\r\n\r\nclass FileCreateModal extends Component {\r\n    state = {\r\n        detail: null,\r\n        to: '',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        username: \"\",\r\n        avatar: \"\",\r\n        isUploading: false,\r\n        progress: 0,\r\n        pubURL: null\r\n    };\r\n\r\n    \r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n    handleProgress = progress => this.setState({ progress });\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n\r\n    handleUploadSuccess = async (filename) => {\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(this.props.type)\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ pubURL: url }));\r\n    };\r\n\r\n    componentDidMount() {\r\n       \r\n        this.setState({\r\n            to: ''\r\n        })\r\n\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    createFile = async () => {\r\n        if(!this.state.to) {\r\n            alert('Please input Filename')\r\n            return;\r\n        }\r\n        let data = {}\r\n        data.id = this.props.id\r\n        data.type =this.props.type\r\n        data.content = {}\r\n        data.content['url'] = this.state.pubURL\r\n        data.content['name'] = this.state.to\r\n        this.setState({ requesting: true })\r\n        await Apis.createMaterialFile(data)\r\n        this.setState({ requesting: false })\r\n        this.props.onCreate()\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting,isUploading,progress } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'md'}\r\n                    size=\"lg\"\r\n                    open={true}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {`Upload File ${this.props.type} `}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n\r\n                            <Grid container\r\n                                direction=\"column\">\r\n                                <FormControl\r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        File Name\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Name of Folder to Create here\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.to}\r\n                                        onChange={this.handleChange('to')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                {\r\n                                    isUploading && \r\n                                        <LinearProgress variant=\"buffer\" value={progress}  color=\"secondary\" />\r\n                                }\r\n                                \r\n                                <FileUploader\r\n                                    accept=\"image/*\"\r\n                                    name=\"avatar\"\r\n                                    randomizeFilename\r\n                                    storageRef={firebase.storage().ref(this.props.type)}\r\n                                    onUploadStart={this.handleUploadStart}\r\n                                    onUploadError={this.handleUploadError}\r\n                                    onUploadSuccess={this.handleUploadSuccess}\r\n                                    onProgress={this.handleProgress}\r\n                                />\r\n                            </Grid>\r\n                            {(requesting || isUploading)&& <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" disabled={((this.state.pubURL!=null)?false:true)} className={classes.btnNewAccount}\r\n                                    onClick={this.createFile}>\r\n                                    Upload\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnCancel}\r\n                                    onClick={this.props.onClose}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileCreateModal.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(FileCreateModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n// core components\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridItem from \"../../../views/GridItem\";\r\nimport GridContainer from \"../../../views/GridContainer\";\r\nimport Card from \"../../../views/Card\";\r\nimport CardHeader from \"../../../views/CardHeader\";\r\nimport CardBody from \"../../../views/CardBody\";\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { styles } from './styles';\r\nimport { createStyles, withStyles } from '@material-ui/core/styles';\r\nimport Apis from '../../../../utils/Apis'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport CreateNewFolder from '@material-ui/icons/CreateNewFolder';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Subject from '@material-ui/icons/Subject';\r\nimport FolderCreateModal from './folder_create';\r\nimport FileCreateModal from './file_create'\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\n \r\nconst config = {\r\n  apiKey: \"AIzaSyDs-AM6a4friRKfD5pHWYC_syorBQ6MDnU\",\r\n  authDomain: \"neostudio-4034f.firebaseapp.com\",\r\n  storageBucket: \"gs://neostudio-4034f.appspot.com\"\r\n};\r\n\r\n\r\nclass Material extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            fetching: false,\r\n            selected: 0,\r\n            files: [],\r\n            file_selected: null,\r\n            openFolderCreate: false,\r\n            openFileCreate: false,\r\n            value: 0\r\n        }\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n    }\r\n\r\n    handleChange = (event, value)=>{\r\n        this.setState({value:value, selected:0, file_selected:null},()=>{\r\n            this.fetchData()\r\n        })\r\n\r\n        \r\n    }\r\n    fetchData = () => {\r\n        this.setState({ fetching: true })\r\n        Apis.getMaterial(this.state.value).then((resp) => {\r\n            let data = resp.data.data\r\n            this.setState({ fetching: false, data: data, openFolderCreate: false, openFileCreate: false })\r\n            console.log(resp.data.data)\r\n        }).catch((e) => {\r\n            this.setState({ fetching: false, data: [], openFolderCreate: false, openFileCreate: false })\r\n        })\r\n    }\r\n\r\n    handleCreateFolder = (name) => {\r\n        this.setState({ openFolderCreate: true })\r\n    }\r\n    handleDeleteFolder = ()=>{\r\n        if(this.state.selected != null){\r\n            this.setState({fetching:true})\r\n            Apis.deleteMaterialFolder(this.state.data[this.state.selected]['_id']).then((resp)=>{\r\n                this.fetchData()\r\n            }).catch((e)=>{\r\n                console.log(e)\r\n                this.setState({fetching:false})\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    handleCreateFile = () => {\r\n        this.setState({ openFileCreate: true })\r\n    }\r\n    handleDeleteFile = ()=>{\r\n        if(this.state.selected != null && this.state.file_selected != null){\r\n            this.setState({fetching:true})\r\n            let data = {}\r\n            data.folder_id = this.state.data[this.state.selected]['_id']\r\n            data.mat_id = this.state.data[this.state.selected]['mat_files'][this.state.file_selected]['_id']\r\n            Apis.deleteMaterial(data.folder_id, data.mat_id).then((resp)=>{\r\n                this.fetchData()\r\n            }).catch((e)=>{\r\n                console.log(e)\r\n                this.setState({fetching:false})\r\n            })\r\n            \r\n        }\r\n    }\r\n    onCloseFolderCreate = () => {\r\n        this.setState({ openFolderCreate: false })\r\n    }\r\n    onCloseFileCreate = () => {\r\n        this.setState({ openFileCreate: false })\r\n    }\r\n    componentDidMount() {\r\n        this.setState({value:0})\r\n        this.fetchData()\r\n    }\r\n\r\n    render() {\r\n        let classes = this.props.classes\r\n        let { fetching, data, selected, value } = this.state\r\n\r\n        let folderItem = (item, key) => {\r\n            return (\r\n                <ListItem button selected={this.state.selected == key}\r\n                    onClick={() => {\r\n                        this.setState({ selected: key, file_selected: null })\r\n                        console.log(item)\r\n                    }}\r\n                >\r\n                    <ListItemIcon>\r\n                        <FolderIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={item.folder_name} />\r\n                </ListItem>\r\n            )\r\n        }\r\n\r\n        let fileItem = (item, key) => {\r\n            return (\r\n                <>\r\n                    <ListItem button selected={this.state.file_selected == key}\r\n                        onClick={() => {\r\n                            this.setState({ file_selected: key })\r\n                        }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <Subject />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n\r\n                    <Collapse in={this.state.file_selected == key} timeout=\"auto\" unmountOnExit>\r\n                        <ListItemText className={classes.nested} style={{padding:\"10px\",paddingLeft:\"30px\",whiteSpace:\"pre-line\"}} primary={`${item.url}`} />\r\n                    </Collapse>\r\n\r\n\r\n                </>\r\n            )\r\n        }\r\n\r\n        let audioTab = (\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={4}>\r\n\r\n                        <Card>\r\n                            <CardHeader color={'success'}>\r\n                                <CreateNewFolder className={classes.action_button} onClick={() => {\r\n                                    this.handleCreateFolder();\r\n                                }}></CreateNewFolder>\r\n                                <DeleteIcon className={classes.action_button} style={{ float: 'right' }}\r\n                                    onClick={()=>{\r\n                                        this.handleDeleteFolder()}\r\n                                    }\r\n                                />\r\n                                <EditIcon className={classes.action_button} style={{ float: 'right' }} \r\n                                    // onClick={this.handleDeleteFolder}\r\n                                />\r\n                            </CardHeader>\r\n                            <CardBody className=\"CustomTable\">\r\n                                {\r\n                                    fetching ? <CircularProgress></CircularProgress> : null\r\n                                }\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                        {\r\n\r\n                                            data.map((prop, key) => {\r\n                                                return folderItem(prop, key)\r\n                                            })\r\n\r\n                                        }\r\n                                    </List>\r\n                                </GridItem>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </GridItem>\r\n\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                    <Card>\r\n                        <CardHeader color={'secondary'}>\r\n                            <AddBoxIcon className={classes.action_button} onClick={() => {\r\n                                this.handleCreateFile();\r\n                            }} />\r\n                            <DeleteIcon className={classes.action_button} style={{ float: 'right' }} \r\n                                onClick={()=>{\r\n                                    this.handleDeleteFile()\r\n                                }}\r\n                            />\r\n                            <EditIcon className={classes.action_button} style={{ float: 'right' }} />\r\n                        </CardHeader>\r\n                        <CardBody className=\"CustomTable\">\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                                    {\r\n                                        data && data[selected] ?\r\n                                            data[selected]['mat_files'].map((prop, key) => {\r\n                                                return fileItem(prop, key)\r\n                                            })\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </List>\r\n                            </GridItem>\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>   \r\n        )\r\n\r\n        return (\r\n            <div container>\r\n                <div className=\"TabView\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                        className={InputLabel}\r\n                    >\r\n                        <Tab label=\"Audio Files\" className={InputLabel} />\r\n                        <Tab label=\"Video Files\" className={InputLabel} />\r\n                    \r\n                    </Tabs>\r\n                    {value === 0 && audioTab}\r\n                    {value === 1 && audioTab}\r\n                </div>\r\n\r\n                {\r\n                    this.state.openFolderCreate ?\r\n                        <FolderCreateModal type={(this.state.value===0)?'audio':'video'} onCreate={this.fetchData} onClose={this.onCloseFolderCreate}></FolderCreateModal>\r\n                        : null\r\n                }\r\n                {\r\n                    this.state.openFileCreate ?\r\n                        <FileCreateModal  type={(this.state.value===0)?'audio':'video'} onCreate={this.fetchData} onClose={this.onCloseFileCreate} id={this.state.data[selected]._id}></FileCreateModal>\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMaterial.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.email,\r\n        token: state.auth.token,\r\n        apiKey: state.auth.api_key,\r\n        companies: state.auth.companies\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, null)(withSnackbar(Material)));","import Dashboard from \"../components/pages/Home/Dashboard\";\r\nimport Users from \"../components/pages/Home/Users\"\r\nimport News from \"../components/pages/Home/News\";\r\nimport Faq from \"../components/pages/Home/Faq\";\r\nimport Exam from '../components/pages/Home/Exam'\r\nimport Ranking from \"../components/pages/Home/Ranking\";\r\nimport Survey from \"../components/pages/Home/Survey\"\r\nimport Order from \"../components/pages/Home/Order\"\r\nimport Material from \"../components/pages/Home/Material\"\r\n\r\n\r\nimport Cloud from '@material-ui/icons/Cloud';\r\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\n\r\nimport { logout } from \"../store/actions/auth\";\r\n\r\n\r\nconst homeRoutes = [\r\n    {\r\n      path: \"/home/dashboard\",\r\n      sidebarName: \"Dashboard\",\r\n      navbarName: \"Dashboard\",\r\n      icon: Cloud,\r\n      component: Dashboard\r\n    },\r\n    {\r\n      path: \"/home/users\",\r\n      sidebarName: \"User Management\",\r\n      navbarName: \"User Management\",\r\n      icon: SupervisorAccount,\r\n      component: Users\r\n    },\r\n    \r\n    {\r\n      path: \"/home/news\",\r\n      sidebarName: \"News\",\r\n      navbarName: \"News \",\r\n      icon: Person,\r\n      component: News\r\n    },\r\n    {\r\n      path: \"/home/faq\",\r\n      sidebarName: \"FAQ\",\r\n      navbarName: \"FAQ\",\r\n      icon: Person,\r\n      component: Faq\r\n    },\r\n    {\r\n      path: \"/home/material\",\r\n      sidebarName: \"Materials\",\r\n      navbarName: \"Materials\",\r\n      icon: Person,\r\n      component: Material\r\n    },\r\n    {\r\n      path: \"/home/exam\",\r\n      sidebarName: \"Exam\",\r\n      navbarName: \"Exam\",\r\n      icon: Person,\r\n      component: Exam\r\n    },\r\n    // {\r\n    //   path: \"/home/ranking\",\r\n    //   sidebarName: \"Ranking\",\r\n    //   navbarName: \"Ranking\",\r\n    //   icon: Person,\r\n    //   component: Ranking\r\n    // },\r\n    {\r\n      path: \"/home/survey\",\r\n      sidebarName: \"Survey\",\r\n      navbarName: \"Survey\",\r\n      icon: Person,\r\n      component: Survey\r\n    },\r\n    // {\r\n    //   path: \"/home/order\",\r\n    //   sidebarName: \"Order\",\r\n    //   navbarName: \"Order\",\r\n    //   icon: Person,\r\n    //   component: Order\r\n    // },\r\n    {\r\n      path: \"/home/logout\",\r\n      sidebarName: \"Log Out\",\r\n      navbarName: \"Log Out\",\r\n      icon: ExitToApp,\r\n      component: logout\r\n    },\r\n\r\n    { redirect: true, path: \"/home\", to: \"/home/dashboard\", navbarName: \"Redirect\" }\r\n];\r\n\r\nexport default homeRoutes\r\n\r\n  ","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nimport Header from \"../../views/Header\"\r\nimport Sidebar from '../../views/Sidebar';\r\nimport homeRoutes from '../../../routes/home';\r\nimport logo from '../../../assets/logo12.png';\r\n\r\nconst switchRoutes = (\r\n    <Switch>\r\n        {homeRoutes.map((prop, key) => {\r\n            if (prop.redirect)\r\n                return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n            return <Route path={prop.path} component={prop.component} key={key} />;\r\n        })}\r\n    </Switch>\r\n);\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mobileOpen: false\r\n        };\r\n        this.resizeFunction = this.resizeFunction.bind(this);\r\n    }\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState({ mobileOpen: !this.state.mobileOpen });\r\n    };\r\n\r\n    getRoute() {\r\n        return this.props.location.pathname !== \"/maps\";\r\n    }\r\n\r\n    resizeFunction() {\r\n        if (window.innerWidth >= 960) {\r\n            this.setState({ mobileOpen: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        //     const ps = new PerfectScrollbar(this.refs.mainPanel);\r\n        // }\r\n        window.addEventListener(\"resize\", this.resizeFunction);\r\n    }\r\n\r\n    componentDidUpdate(e) {\r\n        if (e.history.location.pathname !== e.location.pathname) {\r\n            this.refs.mainPanel.scrollTop = 0;\r\n            if (this.state.mobileOpen) {\r\n                this.setState({ mobileOpen: false });\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.resizeFunction);\r\n    }\r\n\r\n    render() {\r\n        const { classes, ...rest } = this.props;\r\n        return (\r\n            <div className={classes.wrapper}>\r\n                <Sidebar\r\n                    routes={homeRoutes}\r\n                    logoText={\"\"}\r\n                    logo={logo}\r\n                    // image={image}\r\n                    handleDrawerToggle={this.handleDrawerToggle}\r\n                    open={this.state.mobileOpen}\r\n                    color=\"primary\"\r\n                    {...rest}\r\n                />\r\n                <div className={classes.mainPanel} ref=\"mainPanel\">\r\n                    <Header\r\n                        routes={homeRoutes}\r\n                        handleDrawerToggle={this.handleDrawerToggle}\r\n                        {...rest}\r\n                    />\r\n                    {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n                    {this.getRoute() ? (\r\n                        <div className={classes.content}>\r\n                        <div className={classes.container}>{switchRoutes}</div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={classes.map}>{switchRoutes}</div>\r\n                    )}\r\n                    {/* {this.getRoute() ? <Footer /> : null} */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n  \r\nexport default withStyles(styles)(Home);","import {\r\n    drawerWidth,\r\n    transition,\r\n    container\r\n} from \"../../../App/styles\";\r\n\r\nexport const styles = theme => ({\r\n    wrapper: {\r\n        position: \"relative\",\r\n        top: \"0\",\r\n        height: \"100vh\"\r\n    },\r\n    mainPanel: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n          width: `calc(100% - ${drawerWidth}px)`\r\n        },\r\n        overflow: \"auto\",\r\n        position: \"relative\",\r\n        float: \"right\",\r\n        ...transition,\r\n        maxHeight: \"100%\",\r\n        width: \"100%\",\r\n        overflowScrolling: \"touch\"\r\n    },\r\n    content: {\r\n        marginTop: \"70px\",\r\n        padding: \"30px 15px\",\r\n        minHeight: \"calc(100vh - 123px)\"\r\n    },\r\n    container,\r\n    map: {\r\n        marginTop: \"70px\"\r\n    }\r\n});\r\n","import red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    title: {\r\n        '& h2': {\r\n          fontSize:20\r\n        }\r\n    },\r\n    main_container: {\r\n        minWidth: 400\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    },\r\n    btnNewAccount: {\r\n        marginLeft: theme.spacing.unit + 20,\r\n        marginRight: theme.spacing.unit + 20,\r\n        marginBottom: 15,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing.unit,\r\n      //   backgroundColor:'#f00',\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    typo:{\r\n        fontSize:\"large\",\r\n        textAlign:\"center\"\r\n    },\r\n    paper:{\r\n        padding:\"50px\",\r\n        marginTop:\"50px\",\r\n        alignItem:'center',\r\n        alignText:'center'\r\n    }\r\n});","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../utils/Apis'\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.registered === 1) {\r\n            this.props.onClose();\r\n            return; \r\n        }\r\n        if (nextProps.registered === -1 && nextProps.error.body !== undefined) {\r\n            this.props.onAlertMessage(\"error\", nextProps.error.body.message);\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n\r\n    handleClickShowConfirmPassword = () => {\r\n        this.setState(state => ({ showConfirmPassword: !state.showConfirmPassword }));\r\n    }\r\n    \r\n    onClose = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    onCreateNew = () => {\r\n        const { email, password, confirm_password, requesting,name} = this.state;\r\n        if (requesting) {\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input email to create new account!\");\r\n            return;\r\n        }\r\n        if (name === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input name to create new account!\");\r\n            return;\r\n        }\r\n        if (password === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input password!\");\r\n            return;\r\n        }\r\n        if (confirm_password === '') {\r\n            this.props.onAlertMessage(\"error\", \"Please input confirm password!\");\r\n            return;\r\n        }\r\n        if (password !== confirm_password) {\r\n            this.props.onAlertMessage(\"error\", \"Don't match two password!\");\r\n            return;\r\n        }\r\n\r\n        this.setState({requesting: true});\r\n        Apis.register({email, password, name})\r\n        .then(res => {\r\n            this.setState({requesting: false});\r\n            this.props.onAlertMessage(\"success\", res.data.message);\r\n            this.props.onAlertMessage(\"info\", \"Please contact with admin to approve account.\");\r\n            this.props.onClose();\r\n        })\r\n        .catch(err => {\r\n            this.setState({requesting: false});\r\n            this.props.onAlertMessage(\"error\", err.response.data.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { open } = this.props;\r\n        const { requesting } = this.state;\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth = {'md'}\r\n                    size = \"lg\"\r\n                    open={open}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"signup-dialog-title\"\r\n                    aria-describedby=\"signup-dialog-description\">\r\n                    <DialogTitle id=\"signup-dialog-title\"\r\n                        className={classes.title}>\r\n                        {\"Create New Account?\"}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems='center'\r\n                            className={classes.main_container}>\r\n                            \r\n                            <Grid container \r\n                                direction=\"column\">\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibName\" className={classes.inputlabel}>\r\n                                        Name\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibName\"\r\n                                        placeholder=\"Your Name Please\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.name}\r\n                                        onChange={this.handleChange('name')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                        Email\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibEmail\"\r\n                                        placeholder=\"you@example.com\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.email}\r\n                                        onChange={this.handleChange('email')}\r\n                                        fullWidth\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibPassword\" className={classes.inputlabel}>\r\n                                        Password\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibPassword\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChange('password')}\r\n                                        type={this.state.showPassword ? 'text' : 'password'}    \r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowPassword}\r\n                                                    >\r\n                                                    {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl \r\n                                    className={classes.formControl}>\r\n                                    <InputLabel shrink htmlFor=\"ibConfirmPassword\" className={classes.inputlabel}>\r\n                                        Confirm Password\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ibConfirmPassword\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        classes={{\r\n                                            root: classes.inputbaseRoot,\r\n                                            input: classes.inputbaseInput,\r\n                                        }}\r\n                                        value={this.state.confirm_password}\r\n                                        onChange={this.handleChange('confirm_password')}\r\n                                        type={this.state.showConfirmPassword ? 'text' : 'password'}    \r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"Toggle password visibility\"\r\n                                                    onClick={this.handleClickShowConfirmPassword}\r\n                                                    >\r\n                                                    {this.state.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                \r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <div className={classes.wrapper}>\r\n                            <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                <Button color=\"primary\" variant=\"contained\" className={classes.btnNewAccount} \r\n                                    onClick={this.onCreateNew}>\r\n                                    Create Account\r\n                                </Button>\r\n                            </Grid>\r\n                            {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// const RegisterlWrapped = withStyles(styles)(Register);\r\n\r\n\r\nexport default withStyles(styles)(Register);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Card from '@material-ui/core/Card';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { styles } from './styles';\r\nimport logo from '../../../assets/logo12.png';\r\n\r\nimport Register from '../Register'\r\nimport { loginRequesting } from \"../../../store/actions/auth\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        showPassword: false,\r\n        open_register: false,\r\n        email:'',\r\n        password: '',\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.authenticated === -1 && nextProps.error.body !== undefined) {\r\n            this.props.enqueueSnackbar(nextProps.error.body.message, { \r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n    onSignIn = () => {\r\n        const { requesting } = this.props;\r\n        if (requesting){\r\n            return;\r\n        }\r\n        const {email, password} = this.state;\r\n        if (email === '') {\r\n            this.props.enqueueSnackbar('Please input email!', { \r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n        if (password === '') {\r\n            this.props.enqueueSnackbar('Please input password!', { \r\n                variant: 'error',\r\n            });\r\n            return;\r\n        }\r\n        this.props.loginRequesting({email, password});\r\n    }\r\n\r\n    createNew = () => {\r\n        const { requesting } = this.props;\r\n        if (requesting){\r\n            return;\r\n        }\r\n        this.setState({open_register: true});\r\n    }\r\n    \r\n    onCloseRegiser = () => {\r\n        this.setState({open_register: false});\r\n    }\r\n\r\n    onAlertMessage = (type, message) => {\r\n        this.props.enqueueSnackbar(message, { \r\n            variant: type,\r\n        });\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleCloseNotification = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openNotification: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { authenticated, requesting } = this.props;\r\n        if (authenticated === 1) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        // const btnSignInClassname = classNames({\r\n        //     [\" \" + classes.btnFocusColor]: !requesting,\r\n        // });\r\n\r\n        return (\r\n            <div container >\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    direction= 'row'>\r\n                    <Grid \r\n                        item xs={12}\r\n                        container\r\n                        className={classes.login_container}>\r\n                        <Card\r\n                            className={classes.card}>\r\n                            <Grid \r\n                                item xs={12}\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems='center'\r\n                                className={classes.main_container}>\r\n                                {/* <img src=></img> */}\r\n                                <Grid container \r\n                                    direction=\"column\"\r\n                                    className={classes.main_subcontainer}>\r\n                                        <img src={logo} alt=\"logo\" className={classes.img} />\r\n                                    <FormControl \r\n                                        className={classes.formControl}>\r\n                                        <InputLabel shrink htmlFor=\"ibEmail\" className={classes.inputlabel}>\r\n                                            Email\r\n                                        </InputLabel>\r\n                                        <OutlinedInput\r\n                                            id=\"ibEmail\"\r\n                                            placeholder=\"you@example.com\"\r\n                                            classes={{\r\n                                                root: classes.inputbaseRoot,\r\n                                                input: classes.inputbaseInput,\r\n                                            }}\r\n                                            value={this.state.email}\r\n                                            onChange={this.handleChange('email')}\r\n                                            fullWidth\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormControl \r\n                                        className={classes.formControl}>\r\n                                        <InputLabel shrink htmlFor=\"ibPassword\" className={classes.inputlabel}>\r\n                                            Password\r\n                                        </InputLabel>\r\n                                        <OutlinedInput\r\n                                            id=\"ibPassword\"\r\n                                            variant=\"outlined\"\r\n                                            placeholder=\"Password\"\r\n                                            classes={{\r\n                                                root: classes.inputbaseRoot,\r\n                                                input: classes.inputbaseInput,\r\n                                            }}\r\n                                            value={this.state.password}\r\n                                            onChange={this.handleChange('password')}\r\n                                            type={this.state.showPassword ? 'text' : 'password'}    \r\n                                            endAdornment={\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"Toggle password visibility\"\r\n                                                        onClick={this.handleClickShowPassword}\r\n                                                        >\r\n                                                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            }\r\n                                        />\r\n                                    </FormControl>\r\n                                    <Grid item container justify=\"flex-end\">\r\n                                        <Button color=\"primary\" className={classes.btnForgetPasssword} disableRipple disableFocusRipple >\r\n                                            Forgot password?\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    {/* <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\"> */}\r\n                                    <div className={classes.wrapper}>\r\n                                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\r\n                                            <Button color=\"primary\" variant=\"contained\" className={classes.btnSignIn} disableRipple\r\n                                                onClick={this.onSignIn}>\r\n                                                Sign In\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        {requesting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                                    </div>\r\n                                    {/* </Grid> */}\r\n                                    <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.containerSignIn}>\r\n                                        <Typography className={classes.lblNewAccount}>Not a member yet?</Typography>\r\n                                        <Button color=\"primary\" className={classes.btnNewAccount} disableRipple disableFocusRipple\r\n                                            onClick={this.createNew}>\r\n                                            Create New Account\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                <Register \r\n                    onClose = {this.onCloseRegiser}\r\n                    onAlertMessage = {this.onAlertMessage}\r\n                    open={this.state.open_register}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        requesting: state.auth.requesting,\r\n        authenticated: state.auth.authenticated,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loginRequesting : bindActionCreators(loginRequesting, dispatch),\r\n})\r\n\r\n// const wrapperLogin = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n// export default withStyles(styles)(Login);\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Login)));","import red from '@material-ui/core/colors/red';\r\nexport const styles = theme => ({\r\n    root: {\r\n        height:\"100vh\",\r\n        background: '#fff',\r\n        alignContent: \"center\"\r\n    },\r\n    logo_container: {\r\n        flex: 1,\r\n        background: '#fff'\r\n    },\r\n    login_container: {\r\n        flex: 1,\r\n        background: '#fff'\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      width: '80%',\r\n      height: 'auto',\r\n    },\r\n    card: {\r\n        width: '100%',\r\n        background:'#fff'\r\n    },\r\n    main_container: {\r\n        height:'100%'\r\n    },\r\n    title: {\r\n        marginLeft:5, \r\n        marginBottom:20\r\n    },\r\n    main_subcontainer: {\r\n        maxWidth:400,\r\n        paddingBottom:100\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    },\r\n    inputlabel: {\r\n      fontSize: 18,\r\n    },\r\n    inputbaseRoot: {\r\n        'label + &': {\r\n            marginTop: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    inputbaseInput: {\r\n        // borderRadius: 4,\r\n        // border: '1px solid #ced4da',\r\n        height:24,\r\n        backgroundColor: theme.palette.common.white,\r\n        fontSize: 16,\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        // '&:focus': {\r\n        //     borderColor: '#80bdff',\r\n        //     boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        // },\r\n    },\r\n    btnForgetPasssword: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: -5,\r\n        width:130,\r\n        fontSize: 12,\r\n        textTransform: 'none',\r\n    },\r\n    btnSignIn: {\r\n        // marginLeft: theme.spacing.unit,\r\n        // marginRight: theme.spacing.unit,\r\n        // marginTop: -5,\r\n        fontSize: 15,\r\n        textTransform: 'none'\r\n    },\r\n    btnFocusColor: {\r\n        // backgroundColor: primaryColor,\r\n        // color: \"#fff\"\r\n    },\r\n    containerSignIn: {\r\n        marginTop:5,\r\n    },\r\n    lblNewAccount: {\r\n        fontSize: 13,\r\n    },\r\n    btnNewAccount: {\r\n        paddingHorizontal: 5,\r\n        margin: 0,\r\n        fontSize: 12,\r\n    },\r\n    wrapper: {\r\n      margin: theme.spacing.unit,\r\n    //   backgroundColor:'#f00',\r\n      position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: red[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n});","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst NoMatch = () => (\r\n    <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: '100vh'}}>\r\n        <Grid item>\r\n            <h1 style={{fontSize:100}}>404</h1>\r\n        </Grid>\r\n        <Grid item>\r\n            <span style={{color:'gray', fontSize:40}}>Error - Page Not Found</span>\r\n        </Grid>\r\n        <Grid>\r\n            <h1>\r\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">🙄</span>\r\n            </h1>\r\n        </Grid>\r\n    </Grid> \r\n);\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { styles } from './styles';\r\nimport Apis from '../../../utils/Apis'\r\nimport Button from '@material-ui/core/Button';\r\nclass Request extends Component  {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            status:0,\r\n            data:{},\r\n            result:'',\r\n            loading:true\r\n        }\r\n    }\r\n    async componentDidMount()  {\r\n        this.setState({ loading: true })\r\n        this.setState({stage:0})\r\n        let result = null\r\n        try {\r\n            result = await Apis.verifyAdmin(this.props.location.search)\r\n            console.log(\"=================================\")\r\n            console.log(\"=================================\",result)\r\n            this.setState({\r\n                loading: false,\r\n                title: \"Email Verified Successfully\",\r\n                status: true,\r\n                data:result.data.data.data,\r\n                result:result.data.data.status\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                loading: false,\r\n                title: \"Email Verification Failed\",\r\n                status: false,\r\n                result:\"Test\"\r\n            })\r\n\r\n        }\r\n    }\r\n    render(){\r\n        const { classes } = this.props;\r\n        const {result} = this.state;\r\n        const {data}  = this.state;\r\n        return (\r\n            <div>\r\n            {\r\n                (this.state.status=='0')?\r\n                    <div>Loading</div>\r\n                 :   \r\n                 <div>\r\n                {\r\n                    this.state.status?\r\n                        <Paper  className={classes.paper} elevation={10}>\r\n                            <Typography className={classes.typo} variant=\"h5\" component=\"h3\">\r\n                                The request was {result}\r\n                            </Typography>\r\n                            <Typography className={classes.typo} component=\"p\">\r\n                            \r\n                            <Typography className={classes.typo} component=\"p\">\r\n                                name : {data.name}\r\n                            </Typography>\r\n                                email : {data.email} \r\n                            </Typography>\r\n                        </Paper>\r\n                    :\r\n                    <Paper  className={classes.paper} elevation={10}>\r\n                        \r\n                        <Typography>\r\n                            Invalid Token\r\n                        </Typography>\r\n                    </Paper>\r\n                }\r\n                \r\n            </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n}\r\n\r\nRequest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Request);","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\nimport RequireAuth from '../components/auth/require_auth';\r\nimport Home from '../components/pages/Home';\r\nimport Login from '../components/pages/Login';\r\nimport Register from '../components/pages/Register';\r\nimport NoMatch from '../components/pages/NoMatch';\r\nimport Request from '../components/pages/Register/request';\r\n\r\n\r\nconst history = createBrowserHistory();\r\nconst Routes = () => (\r\n    <div>\r\n        <BrowserRouter hisotry={history}>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => (<Redirect to=\"/home\" />)} />   \r\n                <Route path=\"/home\" component={RequireAuth(Home)} />\r\n                <Route path=\"/login\" component= {Login} />\r\n                <Route path=\"/register\" component= {Register} />\r\n                <Route path=\"/request\" component= {Request} />\r\n                <Route component={NoMatch} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </div>\r\n);\r\n\r\nexport default Routes\r\n\r\n  ","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { SnackbarProvider } from 'notistack';\r\n// import { PersistGate } from 'redux-persist/integration/react'\r\n// import {store, persistor} from '../store';\r\nimport {store} from '../store';\r\nimport Routes from '../routes'\r\nimport {\r\n    primaryColor, \r\n    primaryLightColor,\r\n    primaryDarkColor,\r\n    secondaryColor,\r\n    secondaryLightColor,\r\n    secondaryDarkColor,\r\n    defaultFont\r\n} from './styles'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: primaryColor,\r\n            light: primaryLightColor,\r\n            dark: primaryDarkColor\r\n        },\r\n        secondary: {\r\n            main: secondaryColor,\r\n            light: secondaryLightColor,\r\n            dark: secondaryDarkColor,\r\n        }\r\n    }\r\n});\r\n\r\nconst stylesSnackbar = {\r\n    success: { ...defaultFont, fontSize: 13 },\r\n    error: { ...defaultFont, fontSize: 13 },\r\n    warning: { ...defaultFont, fontSize: 13 },\r\n    info: { ...defaultFont, fontSize: 13 },\r\n};\r\n\r\nconst NotistackRoutes = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        <SnackbarProvider \r\n            maxSnack={5}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            classes={{\r\n                variantSuccess: classes.success,\r\n                variantError: classes.error,\r\n                variantWarning: classes.warning,\r\n                variantInfo: classes.info,\r\n            }}\r\n        >\r\n            <Routes/>\r\n        </SnackbarProvider>\r\n    );\r\n}\r\n\r\nconst WrappedRoutes = withStyles(stylesSnackbar)(NotistackRoutes)\r\n\r\nconst App = () => (\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            {/* <PersistGate loading={null} persistor={persistor}> */}\r\n            <WrappedRoutes/>\r\n            {/* </PersistGate> */}\r\n        </Provider>\r\n    </MuiThemeProvider>\r\n);\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just signup service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nif(Array.prototype.equals)\r\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\r\n// attach the .equals method to Array's prototype to call it on any array\r\n\r\n// Hide method from for-in loops\r\nObject.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}